{"version":3,"mappings":"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IACT,SAAU,WACV,UAAW,sBACnB,EACI,CACI,GAAI,GACJ,MAAO,wCACP,QAAS,4HACT,SAAU,WACV,UAAW,sBACnB,EACI,CACI,GAAI,GACJ,MAAO,yCACP,QAAS,0IACT,SAAU,WACV,UAAW,sBACnB,EACI,CACI,GAAI,GACJ,MAAO,+BACP,QAAS,+HACT,SAAU,SACV,UAAW,sBACnB,EACI,CACI,GAAI,GACJ,MAAO,2CACP,QAAS,gIACT,SAAU,SACV,UAAW,sBACnB,EACI,CACI,GAAI,GACJ,MAAO,oCACP,QAAS,6IACT,SAAU,SACV,UAAW,sBACnB,EACI,CACI,GAAI,GACJ,MAAO,+CACP,QAAS,oIACT,SAAU,aACV,UAAW,sBACnB,EACI,CACI,GAAI,GACJ,MAAO,+BACP,QAAS,uIACT,SAAU,YACV,UAAW,sBACnB,EACI,CACI,GAAI,GACJ,MAAO,wCACP,QAAS,6IACT,SAAU,YACV,UAAW,sBACnB,EACI,CACI,GAAI,GACJ,MAAO,0CACP,QAAS,mJACT,SAAU,YACV,UAAW,sBACnB,EACI,CACI,GAAI,GACJ,MAAO,+CACP,QAAS,gJACT,SAAU,UACV,UAAW,sBACnB,EACI,CACI,GAAI,GACJ,MAAO,sCACP,QAAS,6HACT,SAAU,WACV,UAAW,sBACnB,EACI,CACI,GAAI,GACJ,MAAO,iCACP,QAAS,6IACT,SAAU,UACV,UAAW,sBACnB,EACI,CACI,GAAI,GACJ,MAAO,yCACP,QAAS,6IACT,SAAU,aACV,UAAW,sBACnB,EACI,CACI,GAAI,GACJ,MAAO,2CACP,QAAS,gIACT,SAAU,SACV,UAAW,sBACnB,EACI,CACI,GAAI,GACJ,MAAO,sCACP,QAAS,8HACT,SAAU,SACV,UAAW,sBACnB,EACI,CACI,GAAI,GACJ,MAAO,6CACP,QAAS,mIACT,SAAU,YACV,UAAW,sBACnB,EACI,CACI,GAAI,GACJ,MAAO,yCACP,QAAS,8HACT,SAAU,WACV,UAAW,sBACnB,EACI,CACI,GAAI,GACJ,MAAO,iCACP,QAAS,6IACT,SAAU,UACV,UAAW,sBACnB,EACI,CACI,GAAI,GACJ,M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","names":["gameConfig","updateConfig","section","key","value","getConfig","_a","QueueSimulator","event","callback","data","delay","updateCountdown","oldValue","updateChance","jumpDirection","jumpAmount","newValue","nextInterval","now","deltaTime","currentQueue","events","roll","cumulativeChance","queue","eventType","jump","cuts","reduction","vips","baseTime","randomMultiplier","estimatedSeconds","hours","minutes","days","nextQueueId","error","saved","state","addition","AdSystem","i","j","imageAds","manifestResponse","manifest","filename","ext","imagePath","ad","potentialAds","src","resolve","img","filenames","preloadPromises","l","adConfig","popup","AudioManager","theme","type","vol","_b","soundType","themeSound","reject","volume","themeSounds","sound","controlsContainer","statusIndicator","controlsRow","muteButton","muted","musicButton","volumeSlider","volumeHideTimeout","e","statusElement","status","interactionEvents","handleFirstInteraction","success","_c","AchievementSystem","newUnlocks","achievement","queueData","unlocks","sessionTime","achievementId","notification","a","shareText","shareUrl","textarea","saveData","id","ThemeManager","themeName","t","titleElement","messageElement","particle","createStar","star","createOrb","orb","characters","createCharacter","char","style","animationStyles","newsFeed","getRecentNews","count","b","NewsSystem","newsItem","timeAgo","categoryIcon","category","icons","timestamp","newsDate","diffMs","diffDays","diffHours","diffMinutes","newIndex","Game","playButton","startScreen","queueContainer","position","waitTime","nextQueue","eventData","completedQueue","result","_d","_e","gameLoop","positionElement","waitTimeElement","unlockedCount","totalCount","countElement","achievementsList","achievementElement","stats","totalMinutes","timeText","closePopup","__vitePreload","queueEngine","musicStatus","musicStatusColor","musicBlocked","musicToggleButton","statusSpan","warningSpan","musicVolumeSlider","volumeTimeout","span","code","action","currentQueueData","overlay","loadingFill","currentQueueId","newQueueData","email","mailtoLink","isVisible","indicator","game"],"ignoreList":[],"sources":["../../src/config.js","../../src/queue-engine.js","../../src/ad-system.js","../../src/audio-manager.js","../../src/achievement-system.js","../../src/theme-manager.js","../../src/news-feed.js","../../src/news-system.js","../../src/main.js"],"sourcesContent":["// Game Configuration\n// Easily modify these settings to change game behavior\n\nexport const gameConfig = {\n    // Ad System Settings\n    ads: {\n        rotationIntervalMs: 20000,  // How long each ad stays (milliseconds)\n        textAdFallback: true,      // Use text ads if no images found\n        adFolder: './assets/images/ads/',\n        supportedFormats: ['.jpg', '.jpeg', '.png', '.webp'],\n\n        // Custom popup messages for each ad\n        adMessages: {\n            'join-queue-premium-member.jpg': {\n                title: '🎯 Premium Queue Membership',\n                message: 'Congratulations! You\\'ve discovered the secret to queue enlightenment.\\n\\nPremium members get:\\n• Exclusive waiting experiences\\n• Advanced queue anxiety management\\n• Priority access to... more queues!',\n                buttonText: 'Join Now!'\n            },\n            'quetendo64.jpg': {\n                title: '🎮 Quetendo 64',\n                message: 'Experience the revolutionary new gaming console!\\n\\nNow with:\\n• 64-bit queue processing\\n• Ultra-realistic waiting graphics\\n• Backwards compatibility with all your favorite queues\\n\\nComing Soon: 2069!',\n                buttonText: 'Pre-Order'\n            },\n            'talk-show-charity.jpg': {\n                title: 'Charity for Kimmel',\n                message: 'Save the talk show hosts!\\n\\nThey have been fired for being naughty but they deserve a second chance.\\n\\nDonate now, every penny counts\\n\\n',\n                buttonText: 'Donate'\n            },\n            'alienwarez-gaming-pc.jpg': {\n                title: '👽 Alienwarez Gaming PC',\n                message: 'Experience gaming like never before!\\n\\nFeatures:\\n• Powered by actual alien technology\\n• RGB lighting visible from space\\n• Can run Crysis at 4K while queuing\\n• Built-in queue acceleration cores\\n• Comes with free abduction insurance!\\n\\nNow with 200% more FPS in waiting simulators!',\n                buttonText: 'Invade Cart'\n            },\n            'queuelife-insurnace.jpg': {\n                title: '🛡️ QueueLife Insurance',\n                message: 'Protect your most valuable asset: your position in line!\\n\\nCoverage includes:\\n• Premium cut-in protection\\n• System maintenance displacement benefits\\n• Queue anxiety therapy sessions\\n• Emergency queue skip vouchers\\n• Peace of mind while waiting\\n\\n*Coverage not valid during actual emergencies or when queue reaches zero',\n                buttonText: 'Get Quote'\n            },\n            'wandering-queue-guild.jpg': {\n                title: '⚔️ Wandering Queue Guild',\n                message: 'Join the legendary guild of professional queue warriors!\\n\\nBenefits:\\n• Epic queue combat training\\n• Legendary waiting armor sets\\n• Access to mythical queue dungeons\\n• Guild hall with premium waiting areas\\n• Weekly raid on the DMV queue boss\\n\\nLevel up your waiting skills today!',\n                buttonText: 'Join Guild'\n            },\n            'default': {\n                title: '📢 Special Offer!',\n                message: 'Thanks for clicking on our ad!\\n\\nWhile you\\'re waiting in queue, why not wait in another queue?\\n\\nOur premium queue experience offers:\\n• Longer wait times\\n• More uncertainty\\n• Enhanced frustration levels',\n                buttonText: 'Learn More'\n            }\n        }\n    },\n\n    // Queue Position Settings\n    queue: {\n        initialPositionMin: 150,     // Minimum starting position\n        initialPositionMax: 200,     // Maximum starting position\n        updateIntervalMin: 500,        // Min time between position updates (ms)\n        updateIntervalMax: 1500,       // Max time between position updates (ms)\n        waitTimeUpdateChance: 0.01,    // Chance to update wait time each frame (0-1)\n        maxCountdownJump: 50,          // Maximum jump up for countdown timer\n\n        // Position change events (chances should add up to 1.0)\n        positionEvents: {\n            normalProgress: 0.7,       // Move forward 1-3 positions (increased)\n            smallJump: 0.15,          // Move forward 5-15 positions (reduced)\n            positionJump: 0.03,       // Queue event - move backward (rare)\n            premiumCut: 0.02,         // Premium members cut in line (rare)\n            maintenance: 0.02,        // System maintenance (rare)\n            stall: 0.08              // No movement (reduced frustration)\n        }\n    },\n\n    // Audio Settings\n    audio: {\n        backgroundMusicVolume: 0.4,    // Background music volume (0-1)\n        soundEffectsVolume: 0.3,       // Sound effects volume (0-1)\n        backgroundMusicFile: './assets/sounds/lofi_seville.mp3'\n    },\n\n    // Achievement Settings\n    achievements: {\n        displayAnimations: true,       // Show unlock animations\n        saveProgress: true,           // Save achievement progress to localStorage\n        checkFrequencyMs: 1000        // How often to check for achievement unlocks\n    },\n\n    // UI Settings\n    ui: {\n        positionGlowIntensity: 0.5,   // Glow effect intensity (0-1)\n        animationSpeed: 300,          // UI animation speed (ms)\n        themeTransitionSpeed: 1000,   // Theme change animation speed (ms)\n        showDebugLogs: true           // Show debug information in console\n    },\n\n    // News System Settings\n    news: {\n        rotationIntervalMs: 15000,     // How long each news item stays (milliseconds)\n        showTimestamp: true,           // Show \"time ago\" for each news item\n        maxItems: 50,                  // Maximum number of news items to load\n        fadeTransition: true,          // Use fade transition between items\n        autoStart: true                // Start news rotation automatically\n    },\n\n    // Theme Settings\n    themes: {\n        defaultTheme: 'basic',\n        availableThemes: ['basic', 'fancy', 'action', 'space', 'battle', 'mystical', 'infinite']\n    }\n};\n\n// Helper function to update config values\nexport function updateConfig(section, key, value) {\n    if (gameConfig[section] && gameConfig[section].hasOwnProperty(key)) {\n        gameConfig[section][key] = value;\n        console.log(`Config updated: ${section}.${key} = ${value}`);\n        return true;\n    } else {\n        console.warn(`Invalid config key: ${section}.${key}`);\n        return false;\n    }\n}\n\n// Helper function to get config values\nexport function getConfig(section, key = null) {\n    if (key === null) {\n        return gameConfig[section];\n    }\n    return gameConfig[section]?.[key];\n}\n\n// Make config available globally for easy console access\nif (typeof window !== 'undefined') {\n    window.gameConfig = gameConfig;\n    window.updateConfig = updateConfig;\n    window.getConfig = getConfig;\n}","// Core queue engine with fake position algorithms\nimport { gameConfig } from './config.js';\n\nexport class QueueSimulator {\n    constructor() {\n        this.state = {\n            currentQueue: 1,\n            position: Math.floor(Math.random() * (gameConfig.queue.initialPositionMax - gameConfig.queue.initialPositionMin)) + gameConfig.queue.initialPositionMin,\n            waitTime: '',\n            isActive: false,\n            achievements: [],\n            currentAd: 0,\n            queueTheme: 'basic',\n            startTime: Date.now(),\n            totalWaitTime: 0,\n            queueEvents: [],\n            lastUpdate: Date.now(),\n            isCompleting: false  // Flag to prevent multiple completions\n        };\n\n        // Initialize wait time after state is created\n        this.state.waitTime = this.calculateFakeWaitTime();\n\n        this.queues = {\n            1: {\n                name: \"Queue Game\",\n                theme: \"basic\",\n                description: \"Welcome to the queue!\",\n                targetPosition: 0,\n                eventChance: 0.3\n            },\n            2: {\n                name: \"Queue Game 2: The Queuening\",\n                theme: \"fancy\",\n                description: \"Premium waiting experience\",\n                targetPosition: 0,\n                eventChance: 0.4\n            },\n            3: {\n                name: \"Queue Game 3: Queue Hard\",\n                theme: \"action\",\n                description: \"Extreme queue combat\",\n                targetPosition: 0,\n                eventChance: 0.5\n            },\n            4: {\n                name: \"Queue Game 4: Queue Wars\",\n                theme: \"space\",\n                description: \"Intergalactic waiting\",\n                targetPosition: 0,\n                eventChance: 0.6\n            },\n            5: {\n                name: \"Queue Game 5: Queue Royale\",\n                theme: \"battle\",\n                description: \"Battle for position supremacy\",\n                targetPosition: 0,\n                eventChance: 0.7\n            },\n            6: {\n                name: \"Queue Game 6: The Queue Awakens\",\n                theme: \"mystical\",\n                description: \"Achieve enlightenment through waiting\",\n                targetPosition: 0,\n                eventChance: 0.8\n            },\n            999: {\n                name: \"Queue Game ∞\",\n                theme: \"infinite\",\n                description: \"The eternal queue\",\n                targetPosition: 0,\n                eventChance: 1.0\n            }\n        };\n\n        this.eventListeners = {};\n        this.updateInterval = null;\n        this.isPaused = false;\n        this.countdownInterval = null;\n        this.eventCooldown = 0;\n        this.nextUpdateTime = 0;\n        this.countdownSeconds = 0;\n        this.pauseAtZero = false;\n        this.pauseStartTime = 0;\n        this.inPredictableMode = false;\n        this.stickCount = 0; // Track consecutive sticks to force progression\n    }\n\n    // Event system\n    on(event, callback) {\n        if (!this.eventListeners[event]) {\n            this.eventListeners[event] = [];\n        }\n        this.eventListeners[event].push(callback);\n    }\n\n    emit(event, data) {\n        if (this.eventListeners[event]) {\n            this.eventListeners[event].forEach(callback => callback(data));\n        }\n    }\n\n    init() {\n        this.loadState();\n        this.state.isActive = true;\n        this.startQueue();\n        console.log('Queue Game initialized:', this.getCurrentQueue().name);\n    }\n\n    startQueue() {\n        if (this.updateInterval) {\n            clearInterval(this.updateInterval);\n        }\n        if (this.countdownInterval) {\n            clearTimeout(this.countdownInterval);\n        }\n\n        // Reset pause flags\n        this.pauseAtZero = false;\n        this.pauseStartTime = 0;\n        this.inPredictableMode = false;\n        this.stickCount = 0;\n\n        // Set next update time (1-3 seconds with some randomness)\n        this.scheduleNextUpdate();\n\n        // Start countdown timer\n        this.startCountdown();\n\n        this.emit('queueStarted', this.getCurrentQueue());\n    }\n\n    scheduleNextUpdate() {\n        // Don't schedule updates if paused\n        if (this.isPaused) {\n            console.log('Skipping update scheduling - game is paused');\n            return;\n        }\n\n        const delay = Math.random() * (gameConfig.queue.updateIntervalMax - gameConfig.queue.updateIntervalMin) + gameConfig.queue.updateIntervalMin;\n        this.nextUpdateTime = Date.now() + delay;\n        // REMOVED: this.countdownSeconds = Math.ceil(delay / 1000); - This was interfering with countdown timer!\n\n        this.updateInterval = setTimeout(() => {\n            // Check if still not paused when timeout fires\n            if (!this.isPaused) {\n                this.updateQueuePosition();\n                this.scheduleNextUpdate(); // Schedule the next update\n            }\n        }, delay);\n    }\n\n    startCountdown() {\n        // Set initial countdown to a reasonable value if it's 0\n        if (this.countdownSeconds === 0) {\n            this.countdownSeconds = Math.floor(Math.random() * 30) + 15; // 15-45 seconds initial\n        }\n\n        const updateCountdown = () => {\n            if (!this.state.isActive) return; // Stop if queue is not active\n\n            // ABSOLUTE SAFETY CHECK: Never allow countdown above 100\n            if (this.countdownSeconds > 100) {\n                const oldValue = this.countdownSeconds;\n                this.countdownSeconds = 100;\n                console.log(`SAFETY: Countdown capped at 100 (was ${oldValue})`);\n            }\n\n            // Handle pause at zero first\n            if (this.countdownSeconds === 0 && this.pauseAtZero) {\n                const pauseDuration = Date.now() - this.pauseStartTime;\n                if (pauseDuration < 2000) {\n                    // Still in pause, don't change countdown\n                    this.emit('countdownUpdate', this.countdownSeconds);\n                    this.countdownInterval = setTimeout(updateCountdown, 100); // Check every 100ms during pause\n                    return;\n                } else {\n                    // Pause is over, exit pause mode and continue with erratic behavior\n                    this.pauseAtZero = false;\n                }\n            }\n\n            // IMPROVED TWO-ZONE SYSTEM\n            if (this.countdownSeconds > 10) {\n                // ERRATIC ZONE: > 10 (with reasonable limits)\n                this.inPredictableMode = false;\n\n                // Prevent countdown from going too high (absolute max: 100 seconds)\n                if (this.countdownSeconds > 100) {\n                    this.countdownSeconds = 50; // Reset to 50 seconds if too high\n                    console.log(`ERRATIC MODE: Countdown too high (was ${this.countdownSeconds}), reset to 50`);\n                }\n\n                console.log(`ERRATIC MODE: Starting at ${this.countdownSeconds}`);\n                const updateChance = Math.random();\n\n                // Force progression if stuck too many times\n                if (this.stickCount >= 3) {\n                    // Force move to 10 after 3 consecutive sticks\n                    this.countdownSeconds = 10;\n                    this.inPredictableMode = true;\n                    this.stickCount = 0;\n                    console.log(`ERRATIC MODE: FORCED progression after ${this.stickCount} sticks - ENTERING PREDICTABLE MODE at 10`);\n                } else if (updateChance < 0.15) {\n                    // 15% chance: Don't update countdown (timer \"sticks\") - reduced from 30%\n                    this.stickCount++;\n                    console.log(`ERRATIC MODE: Timer stuck at ${this.countdownSeconds} (stick #${this.stickCount})`);\n                } else if (updateChance < 0.30) {\n                    // 15% chance: Small jump (1-3 seconds)\n                    this.stickCount = 0; // Reset stick count when moving\n                    const jumpDirection = Math.random() < 0.95 ? -1 : 1; // 95% down, 5% up - heavily favor downward\n                    let jumpAmount = Math.floor(Math.random() * 3) + 1;\n\n                    if (jumpDirection > 0) {\n                        // STRICT upward jump limits\n                        jumpAmount = Math.min(jumpAmount, gameConfig.queue.maxCountdownJump, 100);\n                        const newValue = this.countdownSeconds + jumpAmount;\n\n                        // Hard cap: never go above 100 regardless of config or calculation\n                        this.countdownSeconds = Math.min(newValue, 100);\n                        console.log(`ERRATIC MODE: Small jump UP by ${jumpAmount} from ${this.countdownSeconds - jumpAmount} to ${this.countdownSeconds} (max 100)`);\n                    } else {\n                        // ANY downward movement from >10 ALWAYS lands on 10\n                        this.countdownSeconds = 10;\n                        this.inPredictableMode = true;\n                        console.log(`ERRATIC MODE: Jump down - ENTERING PREDICTABLE MODE at 10`);\n                    }\n                } else {\n                    // 75% chance: Normal countdown - ANY decrement from >10 lands on 10 - increased from 55%\n                    this.stickCount = 0; // Reset stick count when moving\n                    this.countdownSeconds = 10;\n                    this.inPredictableMode = true;\n                    console.log(`ERRATIC MODE: Normal countdown - ENTERING PREDICTABLE MODE at 10`);\n                }\n                console.log(`ERRATIC MODE: Ended at ${this.countdownSeconds}`);\n\n            } else if (this.countdownSeconds <= 10 && this.countdownSeconds > 0) {\n                // PREDICTABLE ZONE: Simple countdown 10→9→8→7→6→5→4→3→2→1→0\n                if (!this.inPredictableMode) {\n                    this.inPredictableMode = true;\n                    console.log(`ENTERING PREDICTABLE MODE at ${this.countdownSeconds}`);\n                }\n\n                console.log(`PREDICTABLE MODE: ${this.countdownSeconds} -> ${this.countdownSeconds - 1}`);\n                this.countdownSeconds = this.countdownSeconds - 1;\n\n                // If we just reached zero, start the pause\n                if (this.countdownSeconds === 0) {\n                    this.inPredictableMode = false;\n                    this.pauseAtZero = true;\n                    this.pauseStartTime = Date.now();\n                    console.log('STARTING 2-SECOND PAUSE AT ZERO');\n                }\n\n            } else if (this.countdownSeconds === 0 && !this.pauseAtZero) {\n                // RESET ZONE: At zero but not in pause\n                this.inPredictableMode = false;\n                this.stickCount = 0;\n                if (Math.random() < 0.02) { // 2% chance - very rare\n                    // Reset to a very reasonable range (15-35 seconds max)\n                    this.countdownSeconds = Math.floor(Math.random() * 20) + 15; // 15-35 range\n                    console.log(`RESET: Jumped to ${this.countdownSeconds}`);\n                }\n            }\n\n            this.emit('countdownUpdate', this.countdownSeconds);\n\n            // Schedule next countdown update with appropriate interval\n            let nextInterval;\n            if (this.inPredictableMode || (this.countdownSeconds <= 10 && this.countdownSeconds >= 0 && !this.pauseAtZero)) {\n                // STRICT: Exact 1 second intervals during predictable countdown\n                nextInterval = 1000;\n                console.log(`TIMING: Predictable mode - next update in 1000ms`);\n            } else if (this.pauseAtZero) {\n                // Already handled above with 100ms checks during pause\n                return;\n            } else {\n                // Erratic timing when > 10\n                nextInterval = Math.random() * 400 + 200; // 200-600ms random interval\n                console.log(`TIMING: Erratic mode - next update in ${nextInterval}ms`);\n            }\n            this.countdownInterval = setTimeout(updateCountdown, nextInterval);\n        };\n\n        // Start the countdown\n        updateCountdown();\n    }\n\n    update() {\n        const now = Date.now();\n        const deltaTime = now - this.state.lastUpdate;\n        this.state.totalWaitTime += deltaTime;\n        this.state.lastUpdate = now;\n\n        // Update wait time display occasionally (configurable frequency)\n        if (Math.random() < gameConfig.queue.waitTimeUpdateChance) {\n            this.state.waitTime = this.calculateFakeWaitTime();\n            this.emit('waitTimeChanged', this.state.waitTime);\n        }\n\n        // Reduce event cooldown\n        if (this.eventCooldown > 0) {\n            this.eventCooldown -= deltaTime;\n        }\n    }\n\n    updateQueuePosition() {\n        if (!this.state.isActive) return;\n\n        const currentQueue = this.getCurrentQueue();\n        const events = this.getPositionUpdateEvents(currentQueue);\n\n        // Roll for which event happens\n        const roll = Math.random();\n        let cumulativeChance = 0;\n\n        for (const event of events) {\n            cumulativeChance += event.chance;\n            if (roll <= cumulativeChance) {\n                event.action();\n                break;\n            }\n        }\n\n        // Check if queue is completed (only if not already completing)\n        if (this.state.position <= 0 && !this.state.isCompleting) {\n            this.state.isCompleting = true;\n            this.completeQueue();\n        }\n\n        this.emit('positionChanged', this.state.position);\n        this.saveState();\n    }\n\n    getPositionUpdateEvents(queue) {\n        const events = gameConfig.queue.positionEvents;\n        return [\n            // Normal progression (most common)\n            {\n                chance: events.normalProgress,\n                action: () => {\n                    this.state.position = Math.max(0, this.state.position - Math.floor(Math.random() * 3) - 1);\n                }\n            },\n            // Small jump forward\n            {\n                chance: events.smallJump,\n                action: () => {\n                    this.state.position = Math.max(0, this.state.position - Math.floor(Math.random() * 10) - 5);\n                }\n            },\n            // Position jump backward (queue event)\n            {\n                chance: events.positionJump,\n                action: () => {\n                    if (this.eventCooldown <= 0) {\n                        this.triggerQueueEvent('position_jump');\n                    }\n                }\n            },\n            // Premium member cuts in line\n            {\n                chance: events.premiumCut,\n                action: () => {\n                    if (this.eventCooldown <= 0) {\n                        this.triggerQueueEvent('premium_cut');\n                    }\n                }\n            },\n            // System maintenance\n            {\n                chance: events.maintenance,\n                action: () => {\n                    if (this.eventCooldown <= 0) {\n                        this.triggerQueueEvent('maintenance');\n                    }\n                }\n            },\n            // Do nothing (stall)\n            {\n                chance: events.stall,\n                action: () => {\n                    // Intentional stall - builds frustration\n                }\n            }\n        ];\n    }\n\n    triggerQueueEvent(eventType) {\n        const events = {\n            position_jump: {\n                message: \"Queue system error! You've been moved back due to suspicious activity.\",\n                action: () => {\n                    const jump = Math.floor(Math.random() * 500) + 100;\n                    this.state.position += jump;\n                },\n                duration: 3000\n            },\n            premium_cut: {\n                message: \"1,247 Premium Queue™ members have joined ahead of you!\",\n                action: () => {\n                    const cuts = Math.floor(Math.random() * 1500) + 500;\n                    this.state.position += cuts;\n                },\n                duration: 4000\n            },\n            maintenance: {\n                message: \"Queue maintenance in progress... Please remain patient.\",\n                action: () => {\n                    // Freeze for a moment, then small jump back\n                    setTimeout(() => {\n                        this.state.position += Math.floor(Math.random() * 50) + 10;\n                    }, 2000);\n                },\n                duration: 5000\n            },\n            mass_exodus: {\n                message: \"Lucky you! Mass exodus detected ahead of you.\",\n                action: () => {\n                    const reduction = Math.floor(Math.random() * 1000) + 200;\n                    this.state.position = Math.max(0, this.state.position - reduction);\n                },\n                duration: 2000\n            },\n            vip_invasion: {\n                message: \"VIP event attendees are joining the queue...\",\n                action: () => {\n                    const vips = Math.floor(Math.random() * 2000) + 1000;\n                    this.state.position += vips;\n                },\n                duration: 4000\n            }\n        };\n\n        const event = events[eventType];\n        if (event) {\n            event.action();\n            this.emit('queueEvent', {\n                type: eventType,\n                message: event.message,\n                duration: event.duration\n            });\n\n            // Set cooldown to prevent spam\n            this.eventCooldown = event.duration + Math.random() * 10000;\n        }\n    }\n\n    calculateFakeWaitTime() {\n        const baseTime = this.state.position;\n        const randomMultiplier = Math.random() * 5 + 0.5; // 0.5x to 5.5x\n        const estimatedSeconds = (baseTime * randomMultiplier) / 10;\n\n        // Convert to ridiculous time formats\n        if (estimatedSeconds < 60) {\n            return `${Math.floor(estimatedSeconds)} seconds`;\n        } else if (estimatedSeconds < 3600) {\n            const minutes = Math.floor(estimatedSeconds / 60);\n            return `${minutes} minutes`;\n        } else if (estimatedSeconds < 86400) {\n            const hours = Math.floor(estimatedSeconds / 3600);\n            const minutes = Math.floor((estimatedSeconds % 3600) / 60);\n            return `${hours}h ${minutes}m`;\n        } else {\n            const days = Math.floor(estimatedSeconds / 86400);\n            const hours = Math.floor((estimatedSeconds % 86400) / 3600);\n            return `${days} days, ${hours} hours`;\n        }\n    }\n\n    completeQueue() {\n        const currentQueue = this.getCurrentQueue();\n        console.log(`Queue ${this.state.currentQueue} completed!`);\n\n        // Stop the queue updates\n        this.state.isActive = false;\n\n        // Show completion screen first - main.js will handle the advancement timing\n        this.emit('showCompletionScreen', currentQueue);\n    }\n\n    advanceToNextQueue() {\n        // Determine next queue\n        let nextQueueId;\n        if (this.state.currentQueue < 6) {\n            nextQueueId = this.state.currentQueue + 1;\n        } else if (this.state.currentQueue === 6) {\n            nextQueueId = 999; // Jump to infinite queue\n        } else {\n            nextQueueId = 1; // Reset to beginning (the ultimate joke)\n        }\n\n        this.state.currentQueue = nextQueueId;\n        this.state.position = Math.floor(Math.random() * (gameConfig.queue.initialPositionMax - gameConfig.queue.initialPositionMin)) + gameConfig.queue.initialPositionMin; // New random position\n        this.state.waitTime = this.calculateFakeWaitTime();\n        this.state.queueTheme = this.getCurrentQueue().theme;\n\n        // Restart the queue\n        this.state.isActive = true;\n        this.state.isCompleting = false; // Reset completion flag\n\n        this.emit('queueCompleted', this.getCurrentQueue());\n        this.saveState();\n\n        // Restart queue with new settings\n        this.startQueue();\n    }\n\n    getCurrentQueue() {\n        return this.queues[this.state.currentQueue] || this.queues[1];\n    }\n\n    getState() {\n        return { ...this.state };\n    }\n\n    saveState() {\n        try {\n            localStorage.setItem('queueSimulatorState', JSON.stringify({\n                currentQueue: this.state.currentQueue,\n                totalWaitTime: this.state.totalWaitTime,\n                achievements: this.state.achievements\n            }));\n        } catch (error) {\n            console.warn('Failed to save state:', error);\n        }\n    }\n\n    loadState() {\n        try {\n            const saved = localStorage.getItem('queueSimulatorState');\n            if (saved) {\n                const state = JSON.parse(saved);\n                // Always start from queue 1 on page refresh, but keep achievements and stats\n                this.state.currentQueue = 1; // Force start from queue 1\n                this.state.totalWaitTime = state.totalWaitTime || 0;\n                this.state.achievements = state.achievements || [];\n                this.state.queueTheme = this.getCurrentQueue().theme;\n                console.log('State loaded: Starting from Queue 1, preserving achievements/stats');\n            }\n        } catch (error) {\n            console.warn('Failed to load state:', error);\n        }\n    }\n\n    // Fake premium features (parody)\n    buyQueueSkip() {\n        const reduction = Math.floor(Math.random() * 100) + 50;\n        const addition = Math.floor(Math.random() * 500) + 200;\n\n        // Pretend to reduce position, then add more\n        this.state.position = Math.max(0, this.state.position - reduction);\n\n        setTimeout(() => {\n            this.state.position += addition;\n            this.emit('queueEvent', {\n                type: 'premium_backfire',\n                message: 'Queue Skip Pro™ activated! You moved forward... wait, what? System error detected.',\n                duration: 5000\n            });\n        }, 1000);\n\n        return { success: true, message: 'Purchase successful! Processing...' };\n    }\n\n    pause() {\n        this.isPaused = true;\n        console.log('Queue simulator paused');\n    }\n\n    resume() {\n        this.isPaused = false;\n        console.log('Queue simulator resumed');\n\n        // Resume the update cycle if the game is active\n        if (this.state.isActive) {\n            this.scheduleNextUpdate();\n        }\n    }\n\n    destroy() {\n        if (this.updateInterval) {\n            clearTimeout(this.updateInterval);\n        }\n        if (this.countdownInterval) {\n            clearTimeout(this.countdownInterval);\n        }\n        this.state.isActive = false;\n        this.saveState();\n    }\n}","// Parody advertisement system with JPG banner rotation\nimport { gameConfig } from './config.js';\n\nexport class AdSystem {\n    constructor() {\n        this.ads = [];\n        this.currentAdIndex = 0;\n        this.adElement = null;\n        this.rotationInterval = null;\n        this.isLoading = false;\n        this.isPaused = false;\n        this.currentAdData = null;\n        this.shuffledAds = [];\n        this.shuffleIndex = 0;\n        this.preloadedImages = new Map(); // Cache for preloaded images\n\n        // Fallback text ads for when no images are available\n        this.textAds = [\n            {\n                title: \"SkipLine Pro™\",\n                subtitle: \"Jump 1000 positions instantly!\",\n                disclaimer: \"(Results not guaranteed)\",\n                type: \"queue-enhancement\"\n            },\n            {\n                title: \"Queue Anxiety Pills\",\n                subtitle: \"Feel better while waiting longer!\",\n                disclaimer: \"Side effects may include more waiting\",\n                type: \"wellness\"\n            },\n            {\n                title: \"Premium Queue Pass\",\n                subtitle: \"Skip the line to get into a premium line!\",\n                disclaimer: \"Premium line may be longer\",\n                type: \"queue-enhancement\"\n            },\n            {\n                title: \"Gaming Chair Supreme\",\n                subtitle: \"Now with built-in queue anxiety support!\",\n                disclaimer: \"Chair does not reduce wait times\",\n                type: \"gaming\"\n            },\n            {\n                title: \"RGB Queue Lights\",\n                subtitle: \"Your setup will look amazing while waiting!\",\n                disclaimer: \"Lights do not affect queue position\",\n                type: \"gaming\"\n            },\n            {\n                title: \"TaxQueue Pro\",\n                subtitle: \"Do your taxes while you wait!\",\n                disclaimer: \"May increase total waiting time\",\n                type: \"productivity\"\n            },\n            {\n                title: \"Queue University\",\n                subtitle: \"Get your degree during downtime!\",\n                disclaimer: \"Diploma not recognized by employers\",\n                type: \"productivity\"\n            },\n            {\n                title: \"QueueSafe™\",\n                subtitle: \"Protect against random position loss!\",\n                disclaimer: \"Does not actually protect anything\",\n                type: \"insurance\"\n            },\n            {\n                title: \"Queue Dating App\",\n                subtitle: \"Meet other singles in your queue!\",\n                disclaimer: \"All profiles are bots\",\n                type: \"lifestyle\"\n            },\n            {\n                title: \"Premium Queue Snacks\",\n                subtitle: \"Sustenance for the eternal wait!\",\n                disclaimer: \"May cause queue position to increase\",\n                type: \"food\"\n            }\n        ];\n\n        this.adFolder = gameConfig.ads.adFolder;\n        this.supportedFormats = gameConfig.ads.supportedFormats;\n    }\n\n    async init() {\n        this.adElement = document.getElementById('current-ad');\n        if (!this.adElement) {\n            console.warn('Ad display element not found');\n            return;\n        }\n\n        // Make this instance globally accessible for click handlers\n        window.gameAdSystem = this;\n\n        // Show fallback content immediately while loading\n        this.showLoadingAd();\n\n        // Load image ads asynchronously without blocking\n        this.loadImageAds().then(() => {\n            // If no image ads found, use text ads\n            if (this.ads.length === 0) {\n                console.log('No image ads found, using text ads');\n                this.ads = this.textAds;\n            }\n\n            // Initialize shuffle for random rotation\n            this.shuffleAds();\n\n            // Show first real ad immediately\n            this.showCurrentAd();\n\n            console.log(`Ad system initialized with ${this.ads.length} ads`);\n        });\n\n        this.startRotation();\n        this.bindEvents();\n    }\n\n    shuffleAds() {\n        // Create a shuffled copy of all ads\n        this.shuffledAds = [...this.ads];\n\n        // Fisher-Yates shuffle algorithm\n        for (let i = this.shuffledAds.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [this.shuffledAds[i], this.shuffledAds[j]] = [this.shuffledAds[j], this.shuffledAds[i]];\n        }\n\n        this.shuffleIndex = 0;\n        console.log('Ads shuffled for random rotation');\n    }\n\n    async loadImageAds() {\n        try {\n            // Try to dynamically discover JPG files by testing common patterns\n            // This is a workaround since browsers can't list directory contents\n            const imageAds = [];\n\n            // First, try to get a list from a manifest file if it exists\n            try {\n                const manifestResponse = await fetch(`${this.adFolder}manifest.json`);\n                if (manifestResponse.ok) {\n                    const manifest = await manifestResponse.json();\n                    for (const filename of manifest.files) {\n                        if (this.supportedFormats.some(ext => filename.toLowerCase().endsWith(ext))) {\n                            const imagePath = `${this.adFolder}${filename}`;\n                            imageAds.push({\n                                type: 'image',\n                                src: imagePath,\n                                filename: filename,\n                                alt: this.generateAltText(filename)\n                            });\n                        }\n                    }\n                    console.log('Loaded ads from manifest:', imageAds.map(ad => ad.filename));\n\n                    // Preload all manifest images in background (don't await)\n                    this.preloadManifestImages(manifest.files);\n                }\n            } catch (e) {\n                // No manifest file, fall back to discovery method\n                console.log('No manifest found, attempting to discover images...');\n\n                // Try some common naming patterns and existing known files\n                const potentialAds = [\n                    'join-queue-premium-member.jpg',\n                    'quetendo64.jpg',\n                    'talk-show-charity.jpg',\n                    'skipline-pro.jpg',\n                    'queue-anxiety-pills.jpg',\n                    'premium-queue-pass.jpg',\n                    'gaming-chair-supreme.jpg',\n                    'rgb-queue-lights.jpg',\n                    'tax-queue-pro.jpg',\n                    'queue-university.jpg',\n                    'queue-safe.jpg',\n                    'queue-dating-app.jpg',\n                    'premium-queue-snacks.jpg',\n                    'queue-insurance.jpg',\n                    'position-recovery-service.jpg',\n                    'queue-real-estate.jpg',\n                    'meditation-queue.jpg',\n                    'queue-mouse.jpg'\n                ];\n\n                for (const filename of potentialAds) {\n                    try {\n                        const imagePath = `${this.adFolder}${filename}`;\n                        const exists = await this.checkImageExists(imagePath);\n\n                        if (exists) {\n                            imageAds.push({\n                                type: 'image',\n                                src: imagePath,\n                                filename: filename,\n                                alt: this.generateAltText(filename)\n                            });\n                        }\n                    } catch (error) {\n                        // Image doesn't exist, continue\n                    }\n                }\n            }\n\n            this.ads = imageAds;\n\n            if (imageAds.length > 0) {\n                console.log(`Loaded ${imageAds.length} image ads:`, imageAds.map(ad => ad.filename));\n            } else {\n                console.log('No image ads found, falling back to text ads');\n            }\n\n        } catch (error) {\n            console.warn('Failed to load image ads:', error);\n        }\n    }\n\n    checkImageExists(src) {\n        return new Promise((resolve) => {\n            const img = new Image();\n            img.onload = () => {\n                // Store preloaded image for instant access later\n                this.preloadedImages.set(src, img);\n                console.log(`✓ Ad image preloaded: ${src}`);\n                resolve(true);\n            };\n            img.onerror = () => {\n                console.log(`✗ Ad image not found: ${src}`);\n                resolve(false);\n            };\n            img.src = src;\n        });\n    }\n\n    async preloadManifestImages(filenames) {\n        console.log('🔄 Preloading ad images...');\n        const preloadPromises = filenames\n            .filter(filename => this.supportedFormats.some(ext => filename.toLowerCase().endsWith(ext)))\n            .map(filename => {\n                const imagePath = `${this.adFolder}${filename}`;\n                return this.preloadSingleImage(imagePath);\n            });\n\n        try {\n            await Promise.all(preloadPromises);\n            console.log(`✅ Successfully preloaded ${this.preloadedImages.size} ad images`);\n        } catch (error) {\n            console.warn('Some ad images failed to preload:', error);\n        }\n    }\n\n    preloadSingleImage(src) {\n        return new Promise((resolve) => {\n            if (this.preloadedImages.has(src)) {\n                resolve(true); // Already preloaded\n                return;\n            }\n\n            const img = new Image();\n            img.onload = () => {\n                this.preloadedImages.set(src, img);\n                resolve(true);\n            };\n            img.onerror = () => {\n                console.warn(`Failed to preload: ${src}`);\n                resolve(false); // Don't reject, just continue\n            };\n            img.src = src;\n        });\n    }\n\n    generateAltText(filename) {\n        // Generate descriptive alt text from filename\n        return filename\n            .replace(/\\.(jpg|jpeg)$/i, '')\n            .replace(/[-_]/g, ' ')\n            .replace(/\\b\\w/g, l => l.toUpperCase());\n    }\n\n    showLoadingAd() {\n        if (!this.adElement) return;\n\n        // Show a simple loading message\n        this.adElement.innerHTML = `\n            <div class=\"text-ad\" style=\"text-align: center; color: var(--text-secondary);\">\n                <h3 style=\"color: var(--accent-color); margin-bottom: 10px;\">📺 Loading Ads...</h3>\n                <p style=\"margin: 0; font-style: italic;\">Please wait while we load amazing offers!</p>\n            </div>\n        `;\n    }\n\n    startRotation() {\n        // Don't start rotation if paused\n        if (this.isPaused) {\n            console.log('Skipping ad rotation start - system is paused');\n            return;\n        }\n\n        // Set up rotation interval even if no ads loaded yet\n        this.rotationInterval = setInterval(() => {\n            if (!this.isPaused && this.shuffledAds.length > 0) {\n                this.nextAd();\n            }\n        }, gameConfig.ads.rotationIntervalMs);\n    }\n\n    showCurrentAd() {\n        if (!this.adElement || this.shuffledAds.length === 0) return;\n\n        const ad = this.shuffledAds[this.shuffleIndex];\n        this.currentAdData = ad;\n\n        // Add leaving animation to current ad\n        this.adElement.classList.add('ad-leaving');\n\n        setTimeout(() => {\n            if (ad.type === 'image') {\n                this.displayImageAd(ad);\n            } else {\n                this.displayTextAd(ad);\n            }\n\n            // Add entering animation\n            this.adElement.classList.remove('ad-leaving');\n            this.adElement.classList.add('ad-entering');\n\n            setTimeout(() => {\n                this.adElement.classList.remove('ad-entering');\n            }, 500);\n\n        }, 250); // Half of the transition time\n    }\n\n    displayImageAd(ad) {\n        // Check if we have a preloaded version\n        const preloadedImg = this.preloadedImages.get(ad.src);\n\n        if (preloadedImg) {\n            // Use preloaded image for instant display\n            this.adElement.innerHTML = `\n                <img src=\"${ad.src}\"\n                     alt=\"${ad.alt}\"\n                     style=\"max-width: 100%; height: auto; border-radius: 4px; cursor: pointer; opacity: 1; transition: opacity 0.3s ease; border: 2px solid var(--accent-color); box-shadow: 0 0 15px rgba(0, 204, 255, 0.4);\"\n                     onclick=\"window.gameAdSystem.handleAdClick()\">\n            `;\n            console.log(`📸 Using preloaded image: ${ad.filename}`);\n        } else {\n            // Fallback to standard loading with loading indicator\n            this.adElement.innerHTML = `\n                <div style=\"display: flex; align-items: center; justify-content: center; min-height: 100px; color: var(--text-secondary);\">\n                    <span>Loading ad...</span>\n                </div>\n            `;\n\n            // Load image asynchronously\n            setTimeout(() => {\n                this.adElement.innerHTML = `\n                    <img src=\"${ad.src}\"\n                         alt=\"${ad.alt}\"\n                         style=\"max-width: 100%; height: auto; border-radius: 4px; cursor: pointer; opacity: 0; transition: opacity 0.3s ease; border: 2px solid var(--accent-color); box-shadow: 0 0 15px rgba(0, 204, 255, 0.4);\"\n                         onload=\"this.style.opacity = 1;\"\n                         onerror=\"this.style.display='none'\"\n                         onclick=\"window.gameAdSystem.handleAdClick()\">\n                `;\n            }, 100);\n        }\n    }\n\n    displayTextAd(ad) {\n        this.adElement.innerHTML = `\n            <div class=\"text-ad\" style=\"cursor: pointer;\" onclick=\"window.gameAdSystem.handleAdClick()\">\n                <h3 style=\"color: var(--accent-color); margin-bottom: 5px;\">${ad.title}</h3>\n                <p style=\"margin-bottom: 8px;\">${ad.subtitle}</p>\n                <small style=\"color: var(--text-secondary); font-style: italic;\">${ad.disclaimer}</small>\n            </div>\n        `;\n    }\n\n    nextAd() {\n        this.shuffleIndex++;\n\n        // If we've gone through all ads, reshuffle for next round\n        if (this.shuffleIndex >= this.shuffledAds.length) {\n            console.log('Completed full ad rotation, reshuffling...');\n            this.shuffleAds(); // This resets shuffleIndex to 0\n        }\n\n        this.showCurrentAd();\n    }\n\n    bindEvents() {\n        if (!this.adElement) return;\n\n        this.adElement.addEventListener('click', () => {\n            this.handleAdClick();\n        });\n\n        // Add hover effects for text ads\n        this.adElement.addEventListener('mouseenter', () => {\n            this.adElement.style.transform = 'scale(1.02)';\n        });\n\n        this.adElement.addEventListener('mouseleave', () => {\n            this.adElement.style.transform = 'scale(1)';\n        });\n    }\n\n\n    update() {\n        // Called from main game loop - could add dynamic ad behavior here\n        if (Math.random() < 0.001) { // Very rare\n            this.adElement?.classList.add('ad-blinking');\n            setTimeout(() => {\n                this.adElement?.classList.remove('ad-blinking');\n            }, 2000);\n        }\n    }\n\n    // Method to manually add new image ads (for when JPGs are added to folder)\n    async refreshAds() {\n        console.log('Refreshing ad library...');\n        await this.loadImageAds();\n\n        if (this.ads.length === 0) {\n            this.ads = this.textAds;\n        }\n\n        // Reshuffle with new ads\n        this.shuffleAds();\n\n        console.log(`Ad library refreshed: ${this.ads.length} ads available`);\n    }\n\n    handleAdClick() {\n        if (!this.currentAdData) return;\n\n        // Get the appropriate message for this ad\n        let adConfig;\n        if (this.currentAdData.type === 'image') {\n            adConfig = gameConfig.ads.adMessages[this.currentAdData.filename] || gameConfig.ads.adMessages['default'];\n        } else {\n            // For text ads, use a default message\n            adConfig = {\n                title: this.currentAdData.title,\n                message: this.currentAdData.subtitle + '\\n\\n' + this.currentAdData.disclaimer,\n                buttonText: 'OK'\n            };\n        }\n\n        this.showAdPopup(adConfig);\n\n        // Trigger achievement for ad click\n        if (window.gameAchievements) {\n            window.gameAchievements.triggerAdClick();\n        }\n    }\n\n    showAdPopup(adConfig) {\n        const popup = document.createElement('div');\n        popup.style.cssText = `\n            position: fixed;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            background: var(--secondary-bg);\n            border: 3px solid var(--accent-color);\n            padding: 30px;\n            border-radius: 15px;\n            z-index: 1000;\n            max-width: 450px;\n            box-shadow: 0 15px 40px rgba(0,0,0,0.7);\n            text-align: center;\n        `;\n\n        popup.innerHTML = `\n            <h2 style=\"color: var(--accent-color); margin-bottom: 20px; font-size: 1.4em;\">${adConfig.title}</h2>\n            <p style=\"color: var(--text-primary); margin-bottom: 25px; line-height: 1.6; white-space: pre-line;\">${adConfig.message}</p>\n            <button id=\"ad-popup-ok\" style=\"\n                padding: 12px 25px;\n                background: var(--accent-color);\n                color: var(--primary-bg);\n                border: none;\n                border-radius: 8px;\n                cursor: pointer;\n                font-family: inherit;\n                font-weight: bold;\n                font-size: 1.1em;\n                box-shadow: 0 4px 12px rgba(0, 204, 170, 0.4);\n                transition: all 0.3s ease;\n            \" onmouseover=\"this.style.transform='translateY(-2px)'\" onmouseout=\"this.style.transform='translateY(0)'\">${adConfig.buttonText}</button>\n        `;\n\n        document.body.appendChild(popup);\n\n        // Single click anywhere on popup closes it\n        popup.addEventListener('click', () => {\n            popup.remove();\n        });\n    }\n\n\n    pause() {\n        this.isPaused = true;\n        if (this.rotationInterval) {\n            clearInterval(this.rotationInterval);\n            this.rotationInterval = null;\n        }\n        console.log('Ad system paused');\n    }\n\n    resume() {\n        this.isPaused = false;\n        if (this.ads.length > 0) {\n            this.startRotation();\n        }\n        console.log('Ad system resumed');\n    }\n\n    destroy() {\n        if (this.rotationInterval) {\n            clearInterval(this.rotationInterval);\n        }\n    }\n}","// Audio management for different queue themes\nimport { gameConfig } from './config.js';\n\nexport class AudioManager {\n    constructor() {\n        this.audioContext = null;\n        this.sounds = {};\n        this.currentTheme = 'basic';\n        this.isMuted = false;\n        this.volume = gameConfig.audio.soundEffectsVolume;\n        this.backgroundMusic = null;\n        this.isBackgroundMusicPlaying = false;\n        this.wasPlayingBeforeMute = false; // Track music state before muting\n\n        // Audio file mappings (placeholder - actual files would need to be added)\n        this.themeAudio = {\n            basic: {\n                background: './assets/sounds/basic-ambient.mp3',\n                beep: './assets/sounds/basic-beep.mp3',\n                notification: './assets/sounds/basic-notification.mp3'\n            },\n            fancy: {\n                background: './assets/sounds/elevator-music.mp3',\n                beep: './assets/sounds/fancy-chime.mp3',\n                notification: './assets/sounds/reception-bell.mp3'\n            },\n            action: {\n                background: './assets/sounds/action-music.mp3',\n                beep: './assets/sounds/military-beep.mp3',\n                notification: './assets/sounds/explosion.mp3'\n            },\n            space: {\n                background: './assets/sounds/space-ambient.mp3',\n                beep: './assets/sounds/space-beep.mp3',\n                notification: './assets/sounds/alien-sound.mp3'\n            },\n            battle: {\n                background: './assets/sounds/battle-music.mp3',\n                beep: './assets/sounds/battle-horn.mp3',\n                notification: './assets/sounds/victory-sound.mp3'\n            },\n            mystical: {\n                background: './assets/sounds/mystical-ambient.mp3',\n                beep: './assets/sounds/meditation-bell.mp3',\n                notification: './assets/sounds/mystical-chime.mp3'\n            },\n            infinite: {\n                background: './assets/sounds/matrix-ambient.mp3',\n                beep: './assets/sounds/glitch-beep.mp3',\n                notification: './assets/sounds/digital-noise.mp3'\n            }\n        };\n    }\n\n    async init() {\n        try {\n            // Initialize Web Audio API\n            this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n\n            // Load initial theme sounds\n            await this.loadThemeSounds('basic');\n\n            // Start loading background music asynchronously (non-blocking)\n            this.loadDefaultBackgroundMusic().catch(error => {\n                console.warn('Background music failed to load:', error);\n            });\n\n            // Set up user interaction listeners for audio\n            this.setupUserInteractionListeners();\n\n            console.log('Audio Manager initialized');\n            return true;\n        } catch (error) {\n            console.warn('Audio initialization failed:', error);\n            return false;\n        }\n    }\n\n    async loadThemeSounds(theme) {\n        if (!this.themeAudio[theme]) return;\n\n        const themeData = this.themeAudio[theme];\n\n        try {\n            // For now, we'll create placeholder audio objects\n            // In a real implementation, you'd load actual audio files\n            this.sounds[theme] = {\n                background: this.createPlaceholderAudio('background', theme),\n                beep: this.createPlaceholderAudio('beep', theme),\n                notification: this.createPlaceholderAudio('notification', theme)\n            };\n\n            console.log(`Audio loaded for theme: ${theme}`);\n        } catch (error) {\n            console.warn(`Failed to load audio for theme ${theme}:`, error);\n        }\n    }\n\n    createPlaceholderAudio(type, theme) {\n        // Create a placeholder audio object that won't crash if files don't exist\n        return {\n            play: () => {\n                console.log(`[Audio] Playing ${type} sound for ${theme} theme`);\n                // In a real implementation, this would play actual audio\n            },\n            stop: () => {\n                console.log(`[Audio] Stopping ${type} sound for ${theme} theme`);\n            },\n            setVolume: (vol) => {\n                console.log(`[Audio] Setting ${type} volume to ${vol}`);\n            }\n        };\n    }\n\n    async setTheme(theme) {\n        if (theme === this.currentTheme) return;\n\n        console.log(`Switching audio theme from ${this.currentTheme} to ${theme}`);\n\n        // Stop current background music\n        if (this.sounds[this.currentTheme]?.background) {\n            this.sounds[this.currentTheme].background.stop();\n        }\n\n        this.currentTheme = theme;\n\n        // Load new theme if not already loaded\n        if (!this.sounds[theme]) {\n            await this.loadThemeSounds(theme);\n        }\n\n        // Start new background music\n        if (!this.isMuted && this.sounds[theme]?.background) {\n            this.sounds[theme].background.play();\n        }\n    }\n\n    playSound(soundType) {\n        if (this.isMuted) return;\n\n        const themeSound = this.sounds[this.currentTheme]?.[soundType];\n        if (themeSound) {\n            themeSound.setVolume(this.volume);\n            themeSound.play();\n        }\n    }\n\n    // Specific sound triggers\n    playPositionUpdate() {\n        this.playSound('beep');\n    }\n\n    playQueueEvent() {\n        this.playSound('notification');\n    }\n\n    playQueueComplete() {\n        // Play a special completion sound\n        this.playSound('notification');\n        setTimeout(() => {\n            this.playSound('beep');\n        }, 500);\n    }\n\n    playAchievement() {\n        // Achievement unlock sound\n        this.playSound('notification');\n    }\n\n    // Background music controls\n    async loadDefaultBackgroundMusic() {\n        try {\n            if (this.backgroundMusic) {\n                this.backgroundMusic.pause();\n                this.backgroundMusic = null;\n            }\n\n            // Create audio element for background music with lazy loading\n            this.backgroundMusic = new Audio();\n            this.backgroundMusic.preload = 'none'; // Don't preload - faster initial load\n            this.backgroundMusic.loop = true;\n            this.backgroundMusic.volume = gameConfig.audio.backgroundMusicVolume;\n            this.backgroundMusic.src = gameConfig.audio.backgroundMusicFile;\n\n            console.log('Background music configured:', {\n                src: this.backgroundMusic.src,\n                volume: this.backgroundMusic.volume,\n                loop: this.backgroundMusic.loop\n            });\n\n            // Add error listeners for debugging\n            this.backgroundMusic.addEventListener('error', (e) => {\n                console.error('Audio error:', e);\n                console.error('Audio error details:', {\n                    error: this.backgroundMusic.error,\n                    networkState: this.backgroundMusic.networkState,\n                    readyState: this.backgroundMusic.readyState\n                });\n            });\n\n            this.backgroundMusic.addEventListener('canplaythrough', () => {\n                console.log('Audio can play through');\n            });\n\n            this.backgroundMusic.addEventListener('loadstart', () => {\n                console.log('Audio load started');\n            });\n\n            return true;\n        } catch (error) {\n            console.warn('Failed to configure background music:', error);\n            return false;\n        }\n    }\n\n    // Enhanced play method that loads music on demand\n    async ensureMusicLoaded() {\n        if (!this.backgroundMusic) return false;\n\n        // If music isn't loaded yet, load it now\n        if (this.backgroundMusic.readyState === 0) {\n            console.log('Loading background music...');\n            try {\n                await new Promise((resolve, reject) => {\n                    this.backgroundMusic.oncanplaythrough = resolve;\n                    this.backgroundMusic.onerror = reject;\n                    this.backgroundMusic.load();\n                });\n                console.log('Background music loaded successfully');\n            } catch (error) {\n                console.warn('Failed to load background music:', error);\n                return false;\n            }\n        }\n        return true;\n    }\n\n    async playBackgroundMusic() {\n        if (!this.backgroundMusic || this.isMuted) return;\n\n        // Ensure music is loaded before playing\n        const loaded = await this.ensureMusicLoaded();\n        if (!loaded) return;\n\n        try {\n            await this.backgroundMusic.play();\n            this.isBackgroundMusicPlaying = true;\n            console.log('Background music started');\n\n            // Store that user has interacted and music can play\n            localStorage.setItem('musicEnabled', 'true');\n        } catch (error) {\n            if (error.name === 'NotAllowedError') {\n                console.log('Music blocked by browser autoplay policy - user interaction required');\n                localStorage.setItem('musicBlocked', 'true');\n            } else {\n                console.warn('Failed to play background music:', error);\n            }\n        }\n    }\n\n    pauseBackgroundMusic() {\n        if (this.backgroundMusic) {\n            this.backgroundMusic.pause();\n            this.isBackgroundMusicPlaying = false;\n\n            // Update status display\n            if (this.musicStatusIndicator) {\n                this.updateMusicStatus(this.musicStatusIndicator);\n            }\n        }\n    }\n\n    stopBackgroundMusic() {\n        if (this.backgroundMusic) {\n            this.backgroundMusic.pause();\n            this.backgroundMusic.currentTime = 0;\n            this.isBackgroundMusicPlaying = false;\n        }\n    }\n\n    // Volume and mute controls\n    setVolume(volume) {\n        this.volume = Math.max(0, Math.min(1, volume));\n\n        // Update all current sounds\n        Object.values(this.sounds).forEach(themeSounds => {\n            Object.values(themeSounds).forEach(sound => {\n                sound.setVolume(this.volume);\n            });\n        });\n\n        // Update background music volume\n        if (this.backgroundMusic) {\n            this.backgroundMusic.volume = gameConfig.audio.backgroundMusicVolume;\n        }\n    }\n\n    toggleMute() {\n        this.isMuted = !this.isMuted;\n\n        if (this.isMuted) {\n            // Store current music state before muting\n            this.wasPlayingBeforeMute = this.isBackgroundMusicPlaying;\n\n            // Stop all sounds\n            Object.values(this.sounds).forEach(themeSounds => {\n                Object.values(themeSounds).forEach(sound => {\n                    sound.stop();\n                });\n            });\n            // Pause background music\n            this.pauseBackgroundMusic();\n\n            console.log('Audio muted, was playing before:', this.wasPlayingBeforeMute);\n        } else {\n            // Resume background music for current theme\n            if (this.sounds[this.currentTheme]?.background) {\n                this.sounds[this.currentTheme].background.play();\n            }\n\n            // When unmuting, always try to start music (whether it was playing before or not)\n            if (this.backgroundMusic) {\n                console.log('Starting background music after unmute');\n                // Clear any blocked state since this is user-initiated\n                localStorage.removeItem('musicBlocked');\n                this.playBackgroundMusic();\n            } else {\n                console.log('No background music available to start');\n            }\n        }\n\n        // Update status display if it exists\n        if (this.musicStatusIndicator) {\n            this.updateMusicStatus(this.musicStatusIndicator);\n        }\n\n        console.log(`Audio ${this.isMuted ? 'muted' : 'unmuted'}`);\n        return this.isMuted;\n    }\n\n    // Create enhanced audio controls UI\n    createAudioControls() {\n        const controlsContainer = document.createElement('div');\n        controlsContainer.style.cssText = `\n            position: fixed;\n            bottom: 20px;\n            right: 20px;\n            display: flex;\n            flex-direction: column;\n            gap: 8px;\n            background: var(--secondary-bg);\n            padding: 12px;\n            border-radius: 8px;\n            border: 1px solid var(--border-color);\n            box-shadow: 0 0 10px rgba(0, 204, 255, 0.2);\n            z-index: 100;\n            min-width: 200px;\n        `;\n\n        // Music status indicator\n        const statusIndicator = document.createElement('div');\n        statusIndicator.id = 'music-status-indicator';\n        statusIndicator.style.cssText = `\n            font-size: 11px;\n            color: var(--text-secondary);\n            text-align: center;\n            margin-bottom: 5px;\n        `;\n        this.updateMusicStatus(statusIndicator);\n\n        // Controls row\n        const controlsRow = document.createElement('div');\n        controlsRow.style.cssText = `\n            display: flex;\n            gap: 10px;\n            align-items: center;\n        `;\n\n        // Mute/unmute button\n        const muteButton = document.createElement('button');\n        muteButton.innerHTML = this.isMuted ? '🔇' : '🔊';\n        muteButton.title = this.isMuted ? 'Unmute Audio' : 'Mute Audio';\n        muteButton.style.cssText = `\n            background: none;\n            border: 1px solid var(--border-color);\n            color: var(--text-primary);\n            padding: 6px 10px;\n            border-radius: 4px;\n            cursor: pointer;\n            font-size: 16px;\n            transition: all 0.2s ease;\n        `;\n\n        muteButton.addEventListener('click', () => {\n            const muted = this.toggleMute();\n            muteButton.innerHTML = muted ? '🔇' : '🔊';\n            muteButton.title = muted ? 'Unmute Audio' : 'Mute Audio';\n            this.updateMusicStatus(statusIndicator);\n\n            // Update music button appearance too\n            if (this.musicToggleButton) {\n                this.musicToggleButton.style.opacity = this.isBackgroundMusicPlaying ? '1' : '0.5';\n            }\n\n            // Auto-hide controls after interaction\n            setTimeout(() => {\n                controlsContainer.style.display = 'none';\n            }, 1500);\n        });\n\n        // Music toggle button\n        const musicButton = document.createElement('button');\n        musicButton.innerHTML = '🎵';\n        musicButton.title = 'Toggle Background Music';\n        musicButton.style.cssText = `\n            background: none;\n            border: 1px solid var(--border-color);\n            color: var(--text-primary);\n            padding: 6px 10px;\n            border-radius: 4px;\n            cursor: pointer;\n            font-size: 16px;\n            transition: all 0.2s ease;\n        `;\n\n        musicButton.addEventListener('click', async () => {\n            if (this.isBackgroundMusicPlaying) {\n                this.pauseBackgroundMusic();\n                musicButton.style.opacity = '0.5';\n            } else {\n                const success = await this.playBackgroundMusic();\n                if (success) {\n                    musicButton.style.opacity = '1';\n                } else {\n                    // Show user they need to interact first\n                    musicButton.innerHTML = '🎵!';\n                    setTimeout(() => {\n                        musicButton.innerHTML = '🎵';\n                    }, 2000);\n                }\n            }\n            this.updateMusicStatus(statusIndicator);\n\n            // Auto-hide controls after interaction\n            setTimeout(() => {\n                controlsContainer.style.display = 'none';\n            }, 1500);\n        });\n\n        // Update music button appearance based on current state\n        musicButton.style.opacity = this.isBackgroundMusicPlaying ? '1' : '0.5';\n\n        // Volume slider\n        const volumeSlider = document.createElement('input');\n        volumeSlider.type = 'range';\n        volumeSlider.min = '0';\n        volumeSlider.max = '1';\n        volumeSlider.step = '0.1';\n        volumeSlider.value = this.volume;\n        volumeSlider.title = 'Volume';\n        volumeSlider.style.cssText = `\n            width: 80px;\n            accent-color: var(--accent-color);\n        `;\n\n        let volumeHideTimeout;\n        volumeSlider.addEventListener('input', (e) => {\n            this.setVolume(parseFloat(e.target.value));\n\n            // Clear existing timeout and set new one for auto-hide\n            clearTimeout(volumeHideTimeout);\n            volumeHideTimeout = setTimeout(() => {\n                controlsContainer.style.display = 'none';\n            }, 2000); // Auto-hide after 2 seconds of no volume changes\n        });\n\n        // Store references for later updates\n        this.musicStatusIndicator = statusIndicator;\n        this.musicToggleButton = musicButton;\n\n        controlsRow.appendChild(muteButton);\n        controlsRow.appendChild(musicButton);\n        controlsRow.appendChild(volumeSlider);\n\n        controlsContainer.appendChild(statusIndicator);\n        controlsContainer.appendChild(controlsRow);\n\n        document.body.appendChild(controlsContainer);\n\n        return controlsContainer;\n    }\n\n    // Update music status display\n    updateMusicStatus(statusElement) {\n        if (!statusElement) return;\n\n        let status = '';\n        if (this.isMuted) {\n            status = '🔇 Audio Muted';\n        } else if (this.isBackgroundMusicPlaying) {\n            status = '🎵 Music Playing';\n        } else {\n            const musicBlocked = localStorage.getItem('musicBlocked');\n            if (musicBlocked === 'true') {\n                status = '🎵 Click to Enable Music';\n            } else {\n                status = '🎵 Music Paused';\n            }\n        }\n\n        console.log('Updating music status:', {\n            isMuted: this.isMuted,\n            isBackgroundMusicPlaying: this.isBackgroundMusicPlaying,\n            musicBlocked: localStorage.getItem('musicBlocked'),\n            finalStatus: status\n        });\n\n        statusElement.textContent = status;\n    }\n\n    // Set up listeners for user interaction to enable audio\n    setupUserInteractionListeners() {\n        const interactionEvents = ['click', 'touchstart', 'keydown'];\n\n        const handleFirstInteraction = () => {\n            console.log('User interaction detected - enabling audio');\n\n            // Try to resume audio context if suspended\n            if (this.audioContext && this.audioContext.state === 'suspended') {\n                this.audioContext.resume().then(() => {\n                    console.log('Audio context resumed');\n                });\n            }\n\n            // Try to start background music if it was blocked\n            const musicBlocked = localStorage.getItem('musicBlocked');\n            if (musicBlocked === 'true' && !this.isBackgroundMusicPlaying) {\n                console.log('Retrying background music after user interaction');\n                this.playBackgroundMusic().then((success) => {\n                    if (success) {\n                        // Clear the blocked flag if successful\n                        localStorage.removeItem('musicBlocked');\n                        // Update UI if music controls exist\n                        if (this.musicStatusIndicator) {\n                            this.updateMusicStatus(this.musicStatusIndicator);\n                        }\n                        if (this.musicToggleButton) {\n                            this.musicToggleButton.style.opacity = '1';\n                        }\n                    } else {\n                        // Update status even if music didn't start\n                        if (this.musicStatusIndicator) {\n                            this.updateMusicStatus(this.musicStatusIndicator);\n                        }\n                    }\n                }).catch(error => {\n                    console.log('Music still blocked after interaction:', error);\n                    // Update status on error too\n                    if (this.musicStatusIndicator) {\n                        this.updateMusicStatus(this.musicStatusIndicator);\n                    }\n                });\n            }\n\n            // Remove listeners after first interaction\n            interactionEvents.forEach(event => {\n                document.removeEventListener(event, handleFirstInteraction, true);\n            });\n        };\n\n        // Add listeners for user interaction\n        interactionEvents.forEach(event => {\n            document.addEventListener(event, handleFirstInteraction, true);\n        });\n    }\n\n    // Enhanced play method with better retry logic\n    async playBackgroundMusicWithRetry() {\n        if (!this.backgroundMusic || this.isMuted) return false;\n\n        // Check if we should attempt to play music\n        const musicBlocked = localStorage.getItem('musicBlocked');\n        if (musicBlocked === 'true') {\n            console.log('Music playback previously blocked - waiting for user interaction');\n            return false;\n        }\n\n        try {\n            const loaded = await this.ensureMusicLoaded();\n            if (!loaded) return false;\n\n            await this.backgroundMusic.play();\n            this.isBackgroundMusicPlaying = true;\n            console.log('Background music started successfully');\n\n            // Clear any previous blocked state\n            localStorage.removeItem('musicBlocked');\n            localStorage.setItem('musicEnabled', 'true');\n\n            // Update status display\n            if (this.musicStatusIndicator) {\n                this.updateMusicStatus(this.musicStatusIndicator);\n            }\n\n            return true;\n        } catch (error) {\n            if (error.name === 'NotAllowedError') {\n                console.log('Music blocked by autoplay policy - will retry on user interaction');\n                localStorage.setItem('musicBlocked', 'true');\n            } else {\n                console.warn('Failed to play background music:', error);\n            }\n\n            // Update status display even on failure\n            if (this.musicStatusIndicator) {\n                this.updateMusicStatus(this.musicStatusIndicator);\n            }\n\n            return false;\n        }\n    }\n\n    // Update the existing play method to use retry logic\n    async playBackgroundMusic() {\n        console.log('playBackgroundMusic called');\n        console.log('Current state:', {\n            hasBackgroundMusic: !!this.backgroundMusic,\n            isMuted: this.isMuted,\n            isPlaying: this.isBackgroundMusicPlaying,\n            musicSrc: this.backgroundMusic?.src,\n            readyState: this.backgroundMusic?.readyState,\n            volume: this.backgroundMusic?.volume\n        });\n        return this.playBackgroundMusicWithRetry();\n    }\n\n    // Cleanup\n    destroy() {\n        if (this.audioContext) {\n            this.audioContext.close();\n        }\n\n        if (this.statusUpdateInterval) {\n            clearInterval(this.statusUpdateInterval);\n        }\n\n        Object.values(this.sounds).forEach(themeSounds => {\n            Object.values(themeSounds).forEach(sound => {\n                sound.stop();\n            });\n        });\n    }\n}","// Achievement system with localStorage persistence\nexport class AchievementSystem {\n    constructor() {\n        this.achievements = {\n            first_wait: {\n                id: 'first_wait',\n                name: 'First Wait',\n                description: 'Complete your first queue',\n                unlocked: false,\n                condition: 'queueCompleted',\n                requirement: 1\n            },\n            patience_virtue: {\n                id: 'patience_virtue',\n                name: 'Patience is a Virtue',\n                description: 'Wait for 10 minutes straight',\n                unlocked: false,\n                condition: 'waitTime',\n                requirement: 600000 // 10 minutes in milliseconds\n            },\n            queue_veteran: {\n                id: 'queue_veteran',\n                name: 'Queue Veteran',\n                description: 'Reach Queue Game 5',\n                unlocked: false,\n                condition: 'queueLevel',\n                requirement: 5\n            },\n            stockholm_syndrome: {\n                id: 'stockholm_syndrome',\n                name: 'Stockholm Syndrome',\n                description: 'Restart from Queue 1 voluntarily',\n                unlocked: false,\n                condition: 'queueReset',\n                requirement: 1\n            },\n            queue_master: {\n                id: 'queue_master',\n                name: 'Queue Master',\n                description: 'Unlock all queue themes',\n                unlocked: false,\n                condition: 'allQueues',\n                requirement: 6\n            },\n            eternal_waiter: {\n                id: 'eternal_waiter',\n                name: 'Eternal Waiter',\n                description: 'Spend 1 hour total in queues',\n                unlocked: false,\n                condition: 'totalWaitTime',\n                requirement: 3600000 // 1 hour in milliseconds\n            },\n            queue_evangelist: {\n                id: 'queue_evangelist',\n                name: 'Queue Evangelist',\n                description: 'Share the game with others',\n                unlocked: false,\n                condition: 'share',\n                requirement: 1\n            },\n            position_jumper: {\n                id: 'position_jumper',\n                name: 'Position Jumper',\n                description: 'Experience 10 queue events',\n                unlocked: false,\n                condition: 'queueEvents',\n                requirement: 10\n            },\n            premium_victim: {\n                id: 'premium_victim',\n                name: 'Premium Victim',\n                description: 'Get cut by premium members 5 times',\n                unlocked: false,\n                condition: 'premiumCuts',\n                requirement: 5\n            },\n            infinite_loop: {\n                id: 'infinite_loop',\n                name: 'Infinite Loop',\n                description: 'Reach the infinite queue',\n                unlocked: false,\n                condition: 'infiniteQueue',\n                requirement: 1\n            },\n            click_master: {\n                id: 'click_master',\n                name: 'Click Master',\n                description: 'Click on 20 advertisements',\n                unlocked: false,\n                condition: 'adClicks',\n                requirement: 20\n            },\n            zen_master: {\n                id: 'zen_master',\n                name: 'Zen Master',\n                description: 'Remain calm during 50 position jumps',\n                unlocked: false,\n                condition: 'positionJumps',\n                requirement: 50\n            }\n        };\n\n        this.stats = {\n            queuesCompleted: 0,\n            totalWaitTime: 0,\n            queueEvents: 0,\n            premiumCuts: 0,\n            adClicks: 0,\n            positionJumps: 0,\n            maxQueueReached: 1,\n            sessionStartTime: Date.now(),\n            visitedQueues: new Set([1])\n        };\n\n        this.eventListeners = {};\n    }\n\n    init() {\n        this.loadProgress();\n        console.log('Achievement System initialized');\n        console.log('Unlocked achievements:', this.getUnlockedAchievements().length);\n    }\n\n    // Event system\n    on(event, callback) {\n        if (!this.eventListeners[event]) {\n            this.eventListeners[event] = [];\n        }\n        this.eventListeners[event].push(callback);\n    }\n\n    emit(event, data) {\n        if (this.eventListeners[event]) {\n            this.eventListeners[event].forEach(callback => callback(data));\n        }\n    }\n\n    checkAchievements(eventType, data) {\n        let newUnlocks = [];\n\n        switch (eventType) {\n            case 'queueCompleted':\n                this.stats.queuesCompleted++;\n                this.stats.visitedQueues.add(data.theme);\n                this.stats.maxQueueReached = Math.max(this.stats.maxQueueReached, data.level || 1);\n\n                // Check various queue-related achievements\n                newUnlocks.push(...this.checkQueueAchievements(data));\n                break;\n\n            case 'queueEvent':\n                this.stats.queueEvents++;\n\n                if (data.type === 'premium_cut') {\n                    this.stats.premiumCuts++;\n                }\n                if (data.type === 'position_jump') {\n                    this.stats.positionJumps++;\n                }\n\n                newUnlocks.push(...this.checkEventAchievements());\n                break;\n\n            case 'adClick':\n                this.stats.adClicks++;\n                newUnlocks.push(...this.checkAdAchievements());\n                break;\n\n            case 'waitTime':\n                this.stats.totalWaitTime = data.totalTime;\n                newUnlocks.push(...this.checkTimeAchievements());\n                break;\n\n            case 'share':\n                newUnlocks.push(...this.checkShareAchievements());\n                break;\n        }\n\n        // Process new unlocks\n        newUnlocks.forEach(achievement => {\n            this.unlockAchievement(achievement.id);\n        });\n\n        this.saveProgress();\n    }\n\n    checkQueueAchievements(queueData) {\n        const unlocks = [];\n\n        // First Wait\n        if (!this.achievements.first_wait.unlocked && this.stats.queuesCompleted >= 1) {\n            unlocks.push(this.achievements.first_wait);\n        }\n\n        // Queue Veteran - reach level 5\n        if (!this.achievements.queue_veteran.unlocked && this.stats.maxQueueReached >= 5) {\n            unlocks.push(this.achievements.queue_veteran);\n        }\n\n        // Queue Master - visit all queue themes\n        if (!this.achievements.queue_master.unlocked && this.stats.visitedQueues.size >= 6) {\n            unlocks.push(this.achievements.queue_master);\n        }\n\n        // Infinite Loop - reach infinite queue\n        if (!this.achievements.infinite_loop.unlocked && queueData.theme === 'infinite') {\n            unlocks.push(this.achievements.infinite_loop);\n        }\n\n        // Stockholm Syndrome - restart from queue 1 after reaching higher levels\n        if (!this.achievements.stockholm_syndrome.unlocked &&\n            queueData.level === 1 && this.stats.maxQueueReached > 3) {\n            unlocks.push(this.achievements.stockholm_syndrome);\n        }\n\n        return unlocks;\n    }\n\n    checkEventAchievements() {\n        const unlocks = [];\n\n        // Position Jumper\n        if (!this.achievements.position_jumper.unlocked && this.stats.queueEvents >= 10) {\n            unlocks.push(this.achievements.position_jumper);\n        }\n\n        // Premium Victim\n        if (!this.achievements.premium_victim.unlocked && this.stats.premiumCuts >= 5) {\n            unlocks.push(this.achievements.premium_victim);\n        }\n\n        // Zen Master\n        if (!this.achievements.zen_master.unlocked && this.stats.positionJumps >= 50) {\n            unlocks.push(this.achievements.zen_master);\n        }\n\n        return unlocks;\n    }\n\n    checkTimeAchievements() {\n        const unlocks = [];\n\n        // Patience is a Virtue - 10 minutes\n        const sessionTime = Date.now() - this.stats.sessionStartTime;\n        if (!this.achievements.patience_virtue.unlocked && sessionTime >= 600000) {\n            unlocks.push(this.achievements.patience_virtue);\n        }\n\n        // Eternal Waiter - 1 hour total\n        if (!this.achievements.eternal_waiter.unlocked && this.stats.totalWaitTime >= 3600000) {\n            unlocks.push(this.achievements.eternal_waiter);\n        }\n\n        return unlocks;\n    }\n\n    checkAdAchievements() {\n        const unlocks = [];\n\n        // Click Master\n        if (!this.achievements.click_master.unlocked && this.stats.adClicks >= 20) {\n            unlocks.push(this.achievements.click_master);\n        }\n\n        return unlocks;\n    }\n\n    checkShareAchievements() {\n        const unlocks = [];\n\n        // Queue Evangelist\n        if (!this.achievements.queue_evangelist.unlocked) {\n            unlocks.push(this.achievements.queue_evangelist);\n        }\n\n        return unlocks;\n    }\n\n    unlockAchievement(achievementId) {\n        const achievement = this.achievements[achievementId];\n        if (!achievement || achievement.unlocked) return;\n\n        achievement.unlocked = true;\n        console.log(`Achievement unlocked: ${achievement.name}`);\n\n        // Show achievement notification\n        this.showAchievementNotification(achievement);\n\n        // Emit event\n        this.emit('achievementUnlocked', achievement);\n\n        this.saveProgress();\n    }\n\n    showAchievementNotification(achievement) {\n        const notification = document.createElement('div');\n        notification.className = 'achievement-notification';\n        notification.innerHTML = `\n            <div style=\"font-weight: bold; margin-bottom: 5px;\">🏆 Achievement Unlocked!</div>\n            <div style=\"font-size: 1.1em;\">${achievement.name}</div>\n            <div style=\"font-size: 0.9em; opacity: 0.8;\">${achievement.description}</div>\n        `;\n\n        document.body.appendChild(notification);\n\n        // Auto-remove after animation\n        setTimeout(() => {\n            if (notification.parentNode) {\n                notification.remove();\n            }\n        }, 3000);\n    }\n\n    getUnlockedAchievements() {\n        return Object.values(this.achievements).filter(a => a.unlocked);\n    }\n\n    getLockedAchievements() {\n        return Object.values(this.achievements).filter(a => !a.unlocked);\n    }\n\n    getAchievementProgress(achievementId) {\n        const achievement = this.achievements[achievementId];\n        if (!achievement) return 0;\n\n        if (achievement.unlocked) return 100;\n\n        // Calculate progress based on achievement type\n        switch (achievement.condition) {\n            case 'queueCompleted':\n                return (this.stats.queuesCompleted / achievement.requirement) * 100;\n            case 'queueEvents':\n                return (this.stats.queueEvents / achievement.requirement) * 100;\n            case 'premiumCuts':\n                return (this.stats.premiumCuts / achievement.requirement) * 100;\n            case 'adClicks':\n                return (this.stats.adClicks / achievement.requirement) * 100;\n            case 'totalWaitTime':\n                return (this.stats.totalWaitTime / achievement.requirement) * 100;\n            case 'waitTime':\n                const sessionTime = Date.now() - this.stats.sessionStartTime;\n                return (sessionTime / achievement.requirement) * 100;\n            default:\n                return 0;\n        }\n    }\n\n    // Manual trigger methods for UI\n    triggerShare() {\n        this.checkAchievements('share');\n\n        // Create a simple share URL\n        const shareText = \"I'm stuck in an infinite queue! Help me by joining Queue Game: \";\n        const shareUrl = window.location.href;\n\n        if (navigator.share) {\n            navigator.share({\n                title: 'Queue Game',\n                text: shareText,\n                url: shareUrl\n            }).catch(error => {\n                console.log('Share cancelled or failed:', error);\n                this.fallbackShare(shareText + shareUrl);\n            });\n        } else {\n            this.fallbackShare(shareText + shareUrl);\n        }\n    }\n\n    fallbackShare(shareText) {\n        // Try clipboard first, with fallback to manual copy\n        if (navigator.clipboard && window.isSecureContext) {\n            navigator.clipboard.writeText(shareText).then(() => {\n                alert('Share link copied to clipboard!');\n            }).catch(error => {\n                console.log('Clipboard access denied:', error);\n                this.manualShare(shareText);\n            });\n        } else {\n            this.manualShare(shareText);\n        }\n    }\n\n    manualShare(shareText) {\n        // Create a temporary text area for manual copying\n        const textarea = document.createElement('textarea');\n        textarea.value = shareText;\n        textarea.style.position = 'fixed';\n        textarea.style.opacity = '0';\n        document.body.appendChild(textarea);\n        textarea.select();\n\n        try {\n            document.execCommand('copy');\n            alert('Share link copied! Paste it wherever you want to share.');\n        } catch (error) {\n            console.log('Manual copy failed:', error);\n            // Final fallback - just show the text\n            prompt('Copy this share link:', shareText);\n        }\n\n        document.body.removeChild(textarea);\n    }\n\n    triggerAdClick() {\n        this.checkAchievements('adClick');\n    }\n\n    // Save/Load progress\n    saveProgress() {\n        try {\n            const saveData = {\n                achievements: this.achievements,\n                stats: {\n                    ...this.stats,\n                    visitedQueues: Array.from(this.stats.visitedQueues)\n                }\n            };\n\n            localStorage.setItem('queueSimulatorAchievements', JSON.stringify(saveData));\n        } catch (error) {\n            console.warn('Failed to save achievements:', error);\n        }\n    }\n\n    loadProgress() {\n        try {\n            const saved = localStorage.getItem('queueSimulatorAchievements');\n            if (saved) {\n                const data = JSON.parse(saved);\n\n                // Merge achievements (in case new ones were added)\n                if (data.achievements) {\n                    Object.keys(data.achievements).forEach(id => {\n                        if (this.achievements[id]) {\n                            this.achievements[id].unlocked = data.achievements[id].unlocked;\n                        }\n                    });\n                }\n\n                // Load stats\n                if (data.stats) {\n                    this.stats = {\n                        ...this.stats,\n                        ...data.stats,\n                        visitedQueues: new Set(data.stats.visitedQueues || [1]),\n                        sessionStartTime: Date.now() // Reset session timer\n                    };\n                }\n            }\n        } catch (error) {\n            console.warn('Failed to load achievements:', error);\n        }\n    }\n\n    // Reset all progress (for testing or user request)\n    resetProgress() {\n        Object.values(this.achievements).forEach(achievement => {\n            achievement.unlocked = false;\n        });\n\n        this.stats = {\n            queuesCompleted: 0,\n            totalWaitTime: 0,\n            queueEvents: 0,\n            premiumCuts: 0,\n            adClicks: 0,\n            positionJumps: 0,\n            maxQueueReached: 1,\n            sessionStartTime: Date.now(),\n            visitedQueues: new Set([1])\n        };\n\n        this.saveProgress();\n        console.log('Achievement progress reset');\n    }\n}","// Theme management for different queue levels\nexport class ThemeManager {\n    constructor() {\n        this.currentTheme = 'basic';\n        this.themes = {\n            basic: {\n                name: 'Basic Terminal',\n                description: 'Classic green-on-black queue experience',\n                className: 'theme-basic'\n            },\n            fancy: {\n                name: 'Corporate Premium',\n                description: 'Sophisticated waiting for sophisticated people',\n                className: 'theme-fancy'\n            },\n            action: {\n                name: 'Military Operation',\n                description: 'High-stakes queue combat zone',\n                className: 'theme-action'\n            },\n            space: {\n                name: 'Galactic Queue',\n                description: 'Waiting among the stars',\n                className: 'theme-space'\n            },\n            battle: {\n                name: 'Queue Royale',\n                description: 'Battle for queue supremacy',\n                className: 'theme-battle'\n            },\n            mystical: {\n                name: 'Zen Enlightenment',\n                description: 'Find peace through infinite waiting',\n                className: 'theme-mystical'\n            },\n            infinite: {\n                name: 'Matrix Protocol',\n                description: 'Welcome to the infinite loop',\n                className: 'theme-infinite'\n            }\n        };\n\n        this.transitionDuration = 1000; // 1 second\n    }\n\n    init() {\n        // Apply default theme\n        this.applyTheme('basic');\n        console.log('Theme Manager initialized');\n    }\n\n    setTheme(themeName) {\n        if (!this.themes[themeName]) {\n            console.warn(`Theme '${themeName}' not found`);\n            return;\n        }\n\n        if (themeName === this.currentTheme) {\n            return; // Already using this theme\n        }\n\n        console.log(`Switching theme from '${this.currentTheme}' to '${themeName}'`);\n\n        // Add transition class\n        document.body.classList.add('theme-transition');\n\n        // Apply new theme after a brief delay for transition effect\n        setTimeout(() => {\n            this.applyTheme(themeName);\n\n            // Remove transition class after transition completes\n            setTimeout(() => {\n                document.body.classList.remove('theme-transition');\n            }, this.transitionDuration);\n\n        }, this.transitionDuration / 4);\n    }\n\n    applyTheme(themeName) {\n        const theme = this.themes[themeName];\n        if (!theme) return;\n\n        // Remove all existing theme classes\n        Object.values(this.themes).forEach(t => {\n            document.body.classList.remove(t.className);\n        });\n\n        // Apply new theme class\n        document.body.classList.add(theme.className);\n\n        // Update queue title and description if elements exist\n        this.updateQueueTitle(themeName);\n\n        this.currentTheme = themeName;\n    }\n\n    updateQueueTitle(themeName) {\n        const titleElement = document.getElementById('queue-title');\n        const messageElement = document.getElementById('queue-message');\n\n        if (titleElement && messageElement) {\n            const theme = this.themes[themeName];\n\n            // Update title based on theme\n            switch (themeName) {\n                case 'basic':\n                    titleElement.textContent = 'Queue Game';\n                    messageElement.textContent = 'Welcome to the queue! Please wait patiently.';\n                    break;\n                case 'fancy':\n                    titleElement.textContent = 'Queue Game 2: The Queuening';\n                    messageElement.textContent = 'Thank you for choosing our premium waiting experience.';\n                    break;\n                case 'action':\n                    titleElement.textContent = 'QUEUE GAME 3: QUEUE HARD';\n                    messageElement.textContent = 'PREPARE FOR EXTREME QUEUE COMBAT!';\n                    break;\n                case 'space':\n                    titleElement.textContent = 'Queue Game 4: Queue Wars';\n                    messageElement.textContent = 'Intergalactic queue protocols engaged...';\n                    break;\n                case 'battle':\n                    titleElement.textContent = 'Queue Game 5: Queue Royale';\n                    messageElement.textContent = 'Battle for position supremacy has begun!';\n                    break;\n                case 'mystical':\n                    titleElement.textContent = 'Queue Game 6: The Queue Awakens';\n                    messageElement.textContent = 'Find enlightenment through the art of waiting...';\n                    break;\n                case 'infinite':\n                    titleElement.textContent = 'Queue Game ∞';\n                    messageElement.textContent = 'W3LC0M3 T0 TH3 1NF1N1T3 L00P...';\n                    break;\n            }\n        }\n    }\n\n    getCurrentTheme() {\n        return this.themes[this.currentTheme];\n    }\n\n    getThemeInfo(themeName) {\n        return this.themes[themeName] || null;\n    }\n\n    getAllThemes() {\n        return { ...this.themes };\n    }\n\n    // Add particle effects for certain themes\n    addParticleEffects(themeName) {\n        this.clearParticleEffects();\n\n        switch (themeName) {\n            case 'space':\n                this.createStarField();\n                break;\n            case 'mystical':\n                this.createFloatingOrbs();\n                break;\n            case 'infinite':\n                this.createMatrixRain();\n                break;\n        }\n    }\n\n    clearParticleEffects() {\n        const existingParticles = document.querySelectorAll('.particle');\n        existingParticles.forEach(particle => particle.remove());\n\n        // Clear any existing particle intervals\n        if (this.particleInterval) {\n            clearInterval(this.particleInterval);\n        }\n    }\n\n    createStarField() {\n        const createStar = () => {\n            const star = document.createElement('div');\n            star.className = 'particle star';\n            star.style.cssText = `\n                position: fixed;\n                width: 2px;\n                height: 2px;\n                background: #ffffff;\n                border-radius: 50%;\n                top: ${Math.random() * 100}vh;\n                left: ${Math.random() * 100}vw;\n                animation: twinkle 2s infinite;\n                pointer-events: none;\n                z-index: -1;\n            `;\n            document.body.appendChild(star);\n\n            // Remove after animation\n            setTimeout(() => star.remove(), 4000);\n        };\n\n        // Create initial stars\n        for (let i = 0; i < 20; i++) {\n            setTimeout(() => createStar(), i * 100);\n        }\n\n        // Continue creating stars\n        this.particleInterval = setInterval(createStar, 500);\n    }\n\n    createFloatingOrbs() {\n        const createOrb = () => {\n            const orb = document.createElement('div');\n            orb.className = 'particle orb';\n            orb.style.cssText = `\n                position: fixed;\n                width: 8px;\n                height: 8px;\n                background: radial-gradient(circle, #daa520, transparent);\n                border-radius: 50%;\n                bottom: -10px;\n                left: ${Math.random() * 100}vw;\n                animation: floatUp 8s linear infinite;\n                pointer-events: none;\n                z-index: -1;\n                opacity: 0.7;\n            `;\n            document.body.appendChild(orb);\n\n            setTimeout(() => orb.remove(), 8000);\n        };\n\n        this.particleInterval = setInterval(createOrb, 1000);\n    }\n\n    createMatrixRain() {\n        const characters = '01ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n\n        const createCharacter = () => {\n            const char = document.createElement('div');\n            char.className = 'particle matrix-char';\n            char.textContent = characters[Math.floor(Math.random() * characters.length)];\n            char.style.cssText = `\n                position: fixed;\n                color: #00ff41;\n                font-family: 'Courier New', monospace;\n                font-size: 14px;\n                top: -20px;\n                left: ${Math.random() * 100}vw;\n                animation: matrixFall 3s linear infinite;\n                pointer-events: none;\n                z-index: -1;\n                opacity: 0.8;\n            `;\n            document.body.appendChild(char);\n\n            setTimeout(() => char.remove(), 3000);\n        };\n\n        this.particleInterval = setInterval(createCharacter, 100);\n    }\n\n    // CSS animation keyframes (these would be better in CSS, but for completeness)\n    addAnimationStyles() {\n        if (document.getElementById('theme-animations')) return;\n\n        const style = document.createElement('style');\n        style.id = 'theme-animations';\n        style.textContent = `\n            @keyframes twinkle {\n                0%, 100% { opacity: 0.3; transform: scale(1); }\n                50% { opacity: 1; transform: scale(1.2); }\n            }\n\n            @keyframes floatUp {\n                0% { transform: translateY(0) rotate(0deg); opacity: 0; }\n                10% { opacity: 0.7; }\n                90% { opacity: 0.7; }\n                100% { transform: translateY(-100vh) rotate(360deg); opacity: 0; }\n            }\n\n            @keyframes matrixFall {\n                0% { transform: translateY(0); opacity: 1; }\n                100% { transform: translateY(100vh); opacity: 0; }\n            }\n        `;\n\n        document.head.appendChild(style);\n    }\n\n    // Initialize particle effects when setting theme\n    setThemeWithEffects(themeName) {\n        this.setTheme(themeName);\n\n        // Add particle effects after theme transition\n        setTimeout(() => {\n            this.addParticleEffects(themeName);\n        }, this.transitionDuration);\n    }\n\n    destroy() {\n        this.clearParticleEffects();\n\n        // Remove animation styles\n        const animationStyles = document.getElementById('theme-animations');\n        if (animationStyles) {\n            animationStyles.remove();\n        }\n    }\n}","// News Feed Data\n// Add new news items to the array below - they will automatically be included in the rotation\n\nexport const newsFeed = [\n    {\n        id: 1,\n        title: \"Queue Game Reaches 1 Million Players\",\n        content: \"The revolutionary waiting experience has captivated audiences worldwide. 'It's like real life, but more frustrating,' says one satisfied customer.\",\n        category: \"milestone\",\n        timestamp: \"2025-09-15T10:30:00Z\"\n    },\n    {\n        id: 2,\n        title: \"New Queue Skip Pro™ Features Announced\",\n        content: \"Premium members can now skip to position 49,999 instead of 50,000! Scientists are calling it 'technically an improvement.'\",\n        category: \"product\",\n        timestamp: \"2025-09-14T15:45:00Z\"\n    },\n    {\n        id: 3,\n        title: \"Local Man Achieves Queue Enlightenment\",\n        content: \"After 47 hours in Queue Game, Jerry from Ohio reports: 'I no longer feel the passage of time. This is either transcendence or a medical emergency.'\",\n        category: \"community\",\n        timestamp: \"2025-12-13T09:20:00Z\"\n    },\n    {\n        id: 4,\n        title: \"Queue Anxiety Pills Show Promising Results\",\n        content: \"Clinical trials reveal 73% of users report reduced anxiety while waiting. Side effects may include increased patience and existential dread.\",\n        category: \"health\",\n        timestamp: \"2025-12-12T14:15:00Z\"\n    },\n    {\n        id: 5,\n        title: \"Breaking: Queue Position Algorithms Updated\",\n        content: \"Our advanced AI now calculates wait times with 15% more uncertainty. 'Chaos is the natural order,' explains Lead Queue Engineer.\",\n        category: \"technology\",\n        timestamp: \"2025-12-11T11:00:00Z\"\n    },\n    {\n        id: 6,\n        title: \"Queue Dating App Launches Today\",\n        content: \"Meet other people who are also waiting! Premium feature: See who's ahead of you in line. Perfect for long-distance queue relationships.\",\n        category: \"lifestyle\",\n        timestamp: \"2025-12-10T16:30:00Z\"\n    },\n    {\n        id: 7,\n        title: \"Study: Waiting Builds Character\",\n        content: \"Researchers confirm that standing in virtual queues increases patience by 300%. Character building has never been this inefficient!\",\n        category: \"science\",\n        timestamp: \"2025-12-09T08:45:00Z\"\n    },\n    {\n        id: 8,\n        title: \"Queue Real Estate Market Booming\",\n        content: \"Premium queue positions now selling for $50k. 'Location, location, location,' says realtor. 'Position 42 has excellent wait time potential.'\",\n        category: \"business\",\n        timestamp: \"2025-12-08T13:20:00Z\"\n    },\n    {\n        id: 9,\n        title: \"Queue University Offers New Degree\",\n        content: \"Bachelor's in Applied Waiting Studies now available! Four-year program includes advanced standing, line theory, and queue psychology.\",\n        category: \"education\",\n        timestamp: \"2025-12-07T10:10:00Z\"\n    },\n    {\n        id: 10,\n        title: \"Queue Mouse™ Prevents RSI\",\n        content: \"Ergonomic mouse designed for extended waiting sessions. Features include stress ball attachment and built-in timer for existential contemplation.\",\n        category: \"product\",\n        timestamp: \"2025-12-06T17:55:00Z\"\n    },\n    {\n        id: 11,\n        title: \"Queue Insurance Now Available\",\n        content: \"Protect your position with comprehensive queue insurance! Coverage includes position theft, line cuts, and acts of queue gods.\",\n        category: \"business\",\n        timestamp: \"2025-12-05T12:40:00Z\"\n    },\n    {\n        id: 12,\n        title: \"Meditation Queue App Gains Popularity\",\n        content: \"Find inner peace while waiting with guided meditation. 'Embrace the void of uncertainty,' teaches Queue Guru Master Chen.\",\n        category: \"wellness\",\n        timestamp: \"2025-12-04T14:25:00Z\"\n    },\n    {\n        id: 13,\n        title: \"Government Considers Queue Regulations\",\n        content: \"Congress debates Queue Safety Act after reports of 'extreme waiting fatigue.' Proposed 72-hour maximum queue time called 'unrealistic.'\",\n        category: \"politics\",\n        timestamp: \"2025-12-03T09:15:00Z\"\n    },\n    {\n        id: 14,\n        title: \"Queue Speedrun Record Broken\",\n        content: \"Gamer completes Queue Game in record 0.3 seconds using exploits. 'I accidentally clicked the wrong button,' admits champion.\",\n        category: \"gaming\",\n        timestamp: \"2025-12-02T19:30:00Z\"\n    },\n    {\n        id: 15,\n        title: \"Virtual Queue Therapy Sessions Available\",\n        content: \"Professional therapists now offer support for queue-related trauma. 'It's okay to feel frustrated,' reassures Dr. Waitington.\",\n        category: \"health\",\n        timestamp: \"2025-12-01T11:50:00Z\"\n    },\n    {\n        id: 16,\n        title: \"Queue Olympics Announced for 2025\",\n        content: \"International Queue Olympics to feature standing, waiting, and advanced line-formation events. 'May the longest wait win,' says organizer.\",\n        category: \"sports\",\n        timestamp: \"2025-11-30T14:20:00Z\"\n    },\n    {\n        id: 17,\n        title: \"AI Predicts Queue Behavior with 99% Accuracy\",\n        content: \"Machine learning algorithm can predict when you'll give up waiting. 'Humans are surprisingly predictable,' notes lead researcher.\",\n        category: \"technology\",\n        timestamp: \"2025-11-29T16:45:00Z\"\n    },\n    {\n        id: 18,\n        title: \"Queue Cafe Opens in Downtown\",\n        content: \"New restaurant where you wait to wait for your food. 'We're revolutionizing the dining experience by adding more queues,' says chef.\",\n        category: \"lifestyle\",\n        timestamp: \"2025-11-28T10:30:00Z\"\n    },\n    {\n        id: 19,\n        title: \"Queue Etiquette Classes Now Mandatory\",\n        content: \"Schools nationwide implement queue behavior curriculum. Subjects include 'Advanced Line Cutting Defense' and 'Patience Through Suffering.'\",\n        category: \"education\",\n        timestamp: \"2025-11-27T13:15:00Z\"\n    },\n    {\n        id: 20,\n        title: \"Breaking: Queue Length Record Shattered\",\n        content: \"Virtual queue reaches 2.5 million people waiting for nothing in particular. 'It's about the journey, not the destination,' explains participant.\",\n        category: \"milestone\",\n        timestamp: \"2025-11-26T09:40:00Z\"\n    },\n    {\n        id: 21,\n        title: \"Queue Weather Report: Heavy Waiting Expected\",\n        content: \"Meteorologists predict 73% chance of extended wait times with occasional bursts of forward movement. Umbrella recommended for outdoor queues.\",\n        category: \"general\",\n        timestamp: \"2025-11-25T07:25:00Z\"\n    },\n    {\n        id: 22,\n        title: \"Queue Subscription Service Launches\",\n        content: \"Monthly fee gets you access to premium waiting experiences. 'Why wait for free when you can pay to wait better?' asks CEO.\",\n        category: \"business\",\n        timestamp: \"2025-11-24T15:50:00Z\"\n    },\n    {\n        id: 23,\n        title: \"Local Queue Achieves Sentience\",\n        content: \"Queue #47 reportedly began making its own decisions about who moves forward. 'It's become quite opinionated,' says confused administrator.\",\n        category: \"science\",\n        timestamp: \"2025-11-23T12:35:00Z\"\n    },\n    {\n        id: 24,\n        title: \"Queue-to-Queue Transportation Invented\",\n        content: \"Revolutionary technology allows instant transfer between queues. 'Now you can wait in multiple lines simultaneously!' celebrates inventor.\",\n        category: \"technology\",\n        timestamp: \"2025-11-22T18:10:00Z\"\n    },\n    {\n        id: 25,\n        title: \"Queue Gaming Championship Finals Tonight\",\n        content: \"Top players compete in professional queue navigation. Prize money reaches $50,000 for mastering the art of efficient waiting.\",\n        category: \"gaming\",\n        timestamp: \"2025-11-21T20:45:00Z\"\n    },\n    {\n        id: 26,\n        title: \"Queue Anonymous Support Groups Form\",\n        content: \"'Hi, I'm Bob, and I'm addicted to waiting in lines.' Support groups help people overcome compulsive queue-joining behavior.\",\n        category: \"health\",\n        timestamp: \"2025-11-20T11:20:00Z\"\n    },\n    {\n        id: 27,\n        title: \"Queue Fashion Week Showcases Latest Trends\",\n        content: \"Designers present cutting-edge waiting attire. This season's must-have: ergonomic standing shoes and patience-enhancing jewelry.\",\n        category: \"lifestyle\",\n        timestamp: \"2025-11-19T14:55:00Z\"\n    },\n    {\n        id: 28,\n        title: \"Government Declares National Queue Day\",\n        content: \"Annual celebration honors the noble art of waiting. Citizens encouraged to form spontaneous lines for no particular reason.\",\n        category: \"politics\",\n        timestamp: \"2025-11-18T08:30:00Z\"\n    },\n    {\n        id: 29,\n        title: \"Queue Ghost Sightings Increase\",\n        content: \"Paranormal investigators report spirits of people who died waiting still holding their place in line. 'They're very polite,' notes expert.\",\n        category: \"general\",\n        timestamp: \"2025-11-17T22:15:00Z\"\n    },\n    {\n        id: 30,\n        title: \"Queue Yoga Becomes Popular Exercise\",\n        content: \"New fitness trend combines meditation with standing in line. 'Achieve inner peace while maintaining your position,' teaches instructor.\",\n        category: \"wellness\",\n        timestamp: \"2025-11-16T17:40:00Z\"\n    },\n    {\n        id: 31,\n        title: \"Scientific Study: Queues Affect Time Perception\",\n        content: \"Researchers discover waiting in line literally slows down time. 'Five minutes feels like hours, it's not just in your head,' confirms physicist.\",\n        category: \"science\",\n        timestamp: \"2025-11-15T13:25:00Z\"\n    },\n    {\n        id: 32,\n        title: \"Queue Travel Agency Opens Bookings\",\n        content: \"Vacation packages feature world's most scenic waiting areas. 'Experience the Swiss Alps while standing in line for 8 hours!' advertises brochure.\",\n        category: \"lifestyle\",\n        timestamp: \"2025-11-14T10:50:00Z\"\n    },\n    {\n        id: 33,\n        title: \"Queue Archaeology Uncovers Ancient Lines\",\n        content: \"Scientists discover 5,000-year-old queue preserved in ice. 'They were waiting for something called 'iPhone 1,' notes confused archaeologist.\",\n        category: \"science\",\n        timestamp: \"2025-11-13T16:35:00Z\"\n    },\n    {\n        id: 34,\n        title: \"Queue Music Genre Gains Popularity\",\n        content: \"New musical style captures the rhythm of waiting. Top hit: 'Standing Still (For 3 Hours)' by The Line Dancers reaches #1.\",\n        category: \"lifestyle\",\n        timestamp: \"2025-11-12T19:20:00Z\"\n    },\n    {\n        id: 35,\n        title: \"Queue Detective Solves Line-Cutting Mystery\",\n        content: \"Private investigator specializing in queue crimes catches serial line-cutter. 'Justice served, one position at a time,' declares detective.\",\n        category: \"general\",\n        timestamp: \"2025-11-11T12:45:00Z\"\n    },\n    {\n        id: 36,\n        title: \"Queue Banking: Earn Interest While Waiting\",\n        content: \"Revolutionary financial service pays customers for time spent in queues. 'Turn your waiting time into winning time!' promises bank president.\",\n        category: \"business\",\n        timestamp: \"2025-11-10T15:10:00Z\"\n    },\n    {\n        id: 37,\n        title: \"Queue Philosopher Publishes New Theory\",\n        content: \"'To Wait or Not to Wait: The Queue Dilemma' explores existential meaning of lines. 'We are all just waiting for something,' reflects author.\",\n        category: \"education\",\n        timestamp: \"2025-11-09T11:30:00Z\"\n    },\n    {\n        id: 38,\n        title: \"Queue Energy: Harvesting Power from Impatience\",\n        content: \"Scientists convert frustrated sighs and foot-tapping into electricity. 'Peak energy production occurs around hour 3 of waiting,' reports team.\",\n        category: \"technology\",\n        timestamp: \"2025-11-08T14:25:00Z\"\n    },\n    {\n        id: 39,\n        title: \"Queue Cooking Show Premieres Tonight\",\n        content: \"'Waiting for Gordon' features celebrity chef teaching patience through extended preparation times. 'A watched pot never boils, but we'll wait anyway!'\",\n        category: \"lifestyle\",\n        timestamp: \"2025-11-07T18:55:00Z\"\n    },\n    {\n        id: 40,\n        title: \"Queue Time Machine Invented\",\n        content: \"Device allows you to experience historical queues from different eras. 'Now you can wait like it's 1999!' exclaims time-traveling queue enthusiast.\",\n        category: \"technology\",\n        timestamp: \"2025-11-06T21:40:00Z\"\n    },\n    {\n        id: 41,\n        title: \"Queue Whisperer Offers Professional Services\",\n        content: \"Expert can communicate with angry queues to calm them down. 'Every line has feelings, you just need to listen,' explains queue psychologist.\",\n        category: \"general\",\n        timestamp: \"2025-11-05T09:15:00Z\"\n    },\n    {\n        id: 42,\n        title: \"Queue Awards Ceremony Honors Longest Waiters\",\n        content: \"Annual gala celebrates those who waited the most. Lifetime Achievement Award goes to woman who's been in line since 1987 for concert tickets.\",\n        category: \"milestone\",\n        timestamp: \"2025-11-04T20:30:00Z\"\n    }\n];\n\n// Helper function to get news by category\nexport function getNewsByCategory(category) {\n    return newsFeed.filter(news => news.category === category);\n}\n\n// Helper function to get recent news (last N items)\nexport function getRecentNews(count = 5) {\n    return newsFeed\n        .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\n        .slice(0, count);\n}\n\n// Helper function to add new news item (for easy expansion)\nexport function addNewsItem(title, content, category = 'general') {\n    const newItem = {\n        id: Math.max(...newsFeed.map(n => n.id)) + 1,\n        title,\n        content,\n        category,\n        timestamp: new Date().toISOString()\n    };\n    newsFeed.unshift(newItem);\n    return newItem;\n}","// News System - Rotating news feed display\nimport { gameConfig } from './config.js';\nimport { newsFeed, getRecentNews } from './news-feed.js';\n\nexport class NewsSystem {\n    constructor() {\n        this.newsItems = [];\n        this.currentNewsIndex = 0;\n        this.newsElement = null;\n        this.rotationInterval = null;\n        this.isActive = false;\n        this.isPaused = false;\n    }\n\n    async init() {\n        this.newsElement = document.getElementById('news-ticker');\n        if (!this.newsElement) {\n            console.warn('News ticker element not found');\n            return;\n        }\n\n        // Load news items\n        this.loadNews();\n\n        if (this.newsItems.length > 0) {\n            this.showCurrentNews();\n\n            if (gameConfig.news.autoStart) {\n                this.startRotation();\n            }\n        } else {\n            console.log('No news items available');\n        }\n\n        console.log(`News system initialized with ${this.newsItems.length} items`);\n    }\n\n    loadNews() {\n        // Load recent news items up to the configured maximum\n        this.newsItems = getRecentNews(gameConfig.news.maxItems);\n\n        if (gameConfig.ui.showDebugLogs) {\n            console.log(`Loaded ${this.newsItems.length} news items`);\n        }\n    }\n\n    showCurrentNews() {\n        if (!this.newsElement || this.newsItems.length === 0) return;\n\n        const newsItem = this.newsItems[this.currentNewsIndex];\n\n        // Add fade out animation if enabled\n        if (gameConfig.news.fadeTransition) {\n            this.newsElement.classList.add('news-fading-out');\n        }\n\n        setTimeout(() => {\n            this.displayNewsItem(newsItem);\n\n            // Add fade in animation\n            if (gameConfig.news.fadeTransition) {\n                this.newsElement.classList.remove('news-fading-out');\n                this.newsElement.classList.add('news-fading-in');\n\n                setTimeout(() => {\n                    this.newsElement.classList.remove('news-fading-in');\n                }, 300);\n            }\n        }, gameConfig.news.fadeTransition ? 200 : 0);\n    }\n\n    displayNewsItem(newsItem) {\n        if (!newsItem) return;\n\n        const timeAgo = this.getTimeAgo(newsItem.timestamp);\n        const categoryIcon = this.getCategoryIcon(newsItem.category);\n\n        this.newsElement.innerHTML = `\n            <div class=\"news-item\" style=\"\n                display: flex;\n                align-items: flex-start;\n                gap: 12px;\n                padding: 15px;\n                background: rgba(20, 20, 20, 0.95);\n                border: 1px solid rgba(0, 204, 170, 0.3);\n                border-left: 4px solid var(--accent-color);\n                border-radius: 6px;\n                box-shadow: 0 2px 8px rgba(0,0,0,0.4);\n            \">\n                <div class=\"news-icon\" style=\"\n                    font-size: 1.2em;\n                    margin-top: 2px;\n                    min-width: 20px;\n                \">${categoryIcon}</div>\n\n                <div class=\"news-content\" style=\"flex: 1;\">\n                    <div class=\"news-header\" style=\"\n                        display: flex;\n                        justify-content: space-between;\n                        align-items: flex-start;\n                        margin-bottom: 8px;\n                        gap: 10px;\n                    \">\n                        <h4 class=\"news-title\" style=\"\n                            color: var(--accent-color);\n                            margin: 0;\n                            font-size: 1em;\n                            font-weight: bold;\n                            line-height: 1.3;\n                            flex: 1;\n                        \">${newsItem.title}</h4>\n\n                        ${gameConfig.news.showTimestamp ? `\n                            <span class=\"news-time\" style=\"\n                                color: #aaaaaa;\n                                font-size: 0.8em;\n                                white-space: nowrap;\n                                margin-top: 2px;\n                                font-weight: 300;\n                            \">${timeAgo}</span>\n                        ` : ''}\n                    </div>\n\n                    <p class=\"news-text\" style=\"\n                        color: #ffffff;\n                        margin: 0;\n                        line-height: 1.4;\n                        font-size: 0.9em;\n                        text-shadow: 0 1px 2px rgba(0,0,0,0.8);\n                        font-weight: 400;\n                    \">${newsItem.content}</p>\n\n                    <div class=\"news-countdown\" style=\"\n                        margin-top: 10px;\n                        font-size: 0.75em;\n                        color: #888888;\n                        font-style: italic;\n                    \">Next update in ${Math.floor(gameConfig.news.rotationIntervalMs / 1000)} seconds</div>\n                </div>\n            </div>\n        `;\n    }\n\n    getCategoryIcon(category) {\n        const icons = {\n            milestone: '🏆',\n            product: '📦',\n            community: '👥',\n            health: '💊',\n            technology: '⚙️',\n            lifestyle: '💝',\n            science: '🔬',\n            business: '💼',\n            education: '🎓',\n            wellness: '🧘',\n            politics: '🏛️',\n            gaming: '🎮',\n            sports: '⚽',\n            general: '📰'\n        };\n        return icons[category] || icons.general;\n    }\n\n    getTimeAgo(timestamp) {\n        const now = new Date();\n        const newsDate = new Date(timestamp);\n        const diffMs = now - newsDate;\n        const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n        const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n        const diffMinutes = Math.floor(diffMs / (1000 * 60));\n\n        if (diffDays > 0) {\n            return `${diffDays}d ago`;\n        } else if (diffHours > 0) {\n            return `${diffHours}h ago`;\n        } else if (diffMinutes > 0) {\n            return `${diffMinutes}m ago`;\n        } else {\n            return 'Just now';\n        }\n    }\n\n    nextNews() {\n        // Random selection instead of sequential\n        const newIndex = Math.floor(Math.random() * this.newsItems.length);\n\n        // Avoid showing the same news item twice in a row (if we have more than 1 item)\n        if (this.newsItems.length > 1 && newIndex === this.currentNewsIndex) {\n            this.currentNewsIndex = (newIndex + 1) % this.newsItems.length;\n        } else {\n            this.currentNewsIndex = newIndex;\n        }\n\n        this.showCurrentNews();\n    }\n\n    previousNews() {\n        this.currentNewsIndex = (this.currentNewsIndex - 1 + this.newsItems.length) % this.newsItems.length;\n        this.showCurrentNews();\n    }\n\n    startRotation() {\n        if (this.rotationInterval) {\n            clearInterval(this.rotationInterval);\n        }\n\n        this.isActive = true;\n        this.rotationInterval = setInterval(() => {\n            this.nextNews();\n        }, gameConfig.news.rotationIntervalMs);\n\n        if (gameConfig.ui.showDebugLogs) {\n            console.log(`News rotation started (${gameConfig.news.rotationIntervalMs}ms interval)`);\n        }\n    }\n\n    stopRotation() {\n        if (this.rotationInterval) {\n            clearInterval(this.rotationInterval);\n            this.rotationInterval = null;\n        }\n        this.isActive = false;\n\n        if (gameConfig.ui.showDebugLogs) {\n            console.log('News rotation stopped');\n        }\n    }\n\n    refreshNews() {\n        this.stopRotation();\n        this.loadNews();\n\n        if (this.newsItems.length > 0) {\n            this.currentNewsIndex = 0;\n            this.showCurrentNews();\n            this.startRotation();\n        }\n\n        console.log('News feed refreshed');\n    }\n\n    pause() {\n        this.isPaused = true;\n        this.stopRotation();\n        console.log('News system paused');\n    }\n\n    resume() {\n        this.isPaused = false;\n        if (this.newsItems.length > 0) {\n            this.startRotation();\n        }\n        console.log('News system resumed');\n    }\n\n    destroy() {\n        this.stopRotation();\n        if (this.newsElement) {\n            this.newsElement.innerHTML = '';\n        }\n    }\n}","// Entry point for Queue Game\nimport { QueueSimulator } from './queue-engine.js';\nimport { AdSystem } from './ad-system.js';\nimport { AudioManager } from './audio-manager.js';\nimport { AchievementSystem } from './achievement-system.js';\nimport { ThemeManager } from './theme-manager.js';\nimport { NewsSystem } from './news-system.js';\nimport { gameConfig } from './config.js';\n\nclass Game {\n    constructor() {\n        this.queueSimulator = new QueueSimulator();\n        this.adSystem = new AdSystem();\n        this.audioManager = new AudioManager();\n        this.achievementSystem = new AchievementSystem();\n        this.themeManager = new ThemeManager();\n        this.newsSystem = new NewsSystem();\n\n        this.isInitialized = false;\n\n        // Cheat code system\n        this.cheatBuffer = '';\n        this.cheatCodes = {\n            'iddqd': () => this.activateCheat()\n        };\n\n        // Game state for focus/blur handling\n        this.isPaused = false;\n        this.wasPlayingMusic = false;\n    }\n\n    async init() {\n        if (this.isInitialized) return;\n\n        try {\n            // Initialize all systems\n            await this.audioManager.init();\n            await this.adSystem.init();\n            await this.newsSystem.init();\n            this.achievementSystem.init();\n            this.themeManager.init();\n\n            // Bind start screen\n            this.bindStartScreen();\n\n            // Set up window focus/blur handling\n            this.setupFocusHandling();\n\n            this.isInitialized = true;\n            console.log('Queue Game initialized successfully - waiting for user to start');\n        } catch (error) {\n            console.error('Failed to initialize Queue Game:', error);\n        }\n    }\n\n    bindStartScreen() {\n        const playButton = document.getElementById('play-button');\n        if (playButton) {\n            playButton.addEventListener('click', () => {\n                this.startGame();\n            });\n        }\n\n        // Contact button on start screen\n        document.getElementById('contact-button')?.addEventListener('click', () => {\n            this.openContactEmail();\n        });\n    }\n\n    startGame() {\n        // Hide start screen\n        const startScreen = document.getElementById('start-screen');\n        const queueContainer = document.getElementById('queue-container');\n\n        if (startScreen && queueContainer) {\n            startScreen.style.display = 'none';\n            queueContainer.style.display = 'block';\n        }\n\n        // Start background music if loaded\n        this.audioManager.playBackgroundMusic();\n\n        // Create enhanced audio controls\n        this.audioControls = this.audioManager.createAudioControls();\n\n        // Auto-hide audio controls after 5 seconds\n        setTimeout(() => {\n            if (this.audioControls) {\n                this.audioControls.style.display = 'none';\n            }\n        }, 5000);\n\n        // Initialize queue simulator\n        this.queueSimulator.init();\n\n        // Bind events\n        this.bindEvents();\n\n        // Start the game loop\n        this.startGameLoop();\n\n        // Initialize displays\n        this.updatePositionDisplay(this.queueSimulator.state.position);\n        this.updateWaitTimeDisplay(this.queueSimulator.state.waitTime);\n        this.updateAchievementDisplay();\n\n        // Bind cheat codes after game starts\n        this.bindCheatCodes();\n\n        console.log('Game started!');\n    }\n\n    bindEvents() {\n        // Handle queue progression\n        this.queueSimulator.on('positionChanged', (position) => {\n            this.updatePositionDisplay(position);\n        });\n\n        this.queueSimulator.on('waitTimeChanged', (waitTime) => {\n            this.updateWaitTimeDisplay(waitTime);\n        });\n\n        this.queueSimulator.on('queueCompleted', (nextQueue) => {\n            this.handleQueueCompletion(nextQueue);\n        });\n\n        this.queueSimulator.on('queueEvent', (eventData) => {\n            this.handleQueueEvent(eventData);\n        });\n\n        this.queueSimulator.on('showCompletionScreen', (completedQueue) => {\n            this.showQueueCompletionScreen(completedQueue);\n        });\n\n\n        // Handle achievements\n        this.achievementSystem.on('achievementUnlocked', (achievement) => {\n            this.updateAchievementDisplay();\n        });\n\n        // Bind UI controls\n        this.bindUIControls();\n\n        // Make achievement system globally accessible for ad clicks\n        window.gameAchievements = this.achievementSystem;\n    }\n\n    bindUIControls() {\n        // Share button\n        document.getElementById('share-button')?.addEventListener('click', () => {\n            this.achievementSystem.triggerShare();\n        });\n\n        // Premium button (fake purchase)\n        document.getElementById('premium-button')?.addEventListener('click', () => {\n            const result = this.queueSimulator.buyQueueSkip();\n            this.showPremiumResult(result);\n        });\n\n\n        // Config button - show enhanced audio controls\n        document.getElementById('config-button')?.addEventListener('click', () => {\n            this.toggleAudioControls();\n        });\n\n        // Reset button\n        document.getElementById('reset-button')?.addEventListener('click', () => {\n            this.showResetConfirmation();\n        });\n\n        // Contact button in game\n        document.getElementById('contact-button-game')?.addEventListener('click', () => {\n            this.openContactEmail();\n        });\n    }\n\n    startGameLoop() {\n        // Main game loop - updates position, ads, etc.\n        const gameLoop = () => {\n            this.queueSimulator.update();\n            this.adSystem.update();\n\n            requestAnimationFrame(gameLoop);\n        };\n\n        gameLoop();\n    }\n\n    updatePositionDisplay(position) {\n        const positionElement = document.getElementById('current-position');\n        if (positionElement) {\n            positionElement.textContent = position.toLocaleString();\n        }\n    }\n\n    updateWaitTimeDisplay(waitTime) {\n        const waitTimeElement = document.getElementById('current-wait-time');\n        if (waitTimeElement) {\n            waitTimeElement.textContent = waitTime;\n        }\n    }\n\n\n    handleQueueCompletion(nextQueue) {\n        console.log(`Queue completed! Moving to: ${nextQueue.name}`);\n        this.themeManager.setTheme(nextQueue.theme);\n        this.achievementSystem.checkAchievements('queueCompleted', nextQueue);\n    }\n\n    handleQueueEvent(eventData) {\n        console.log('Queue event:', eventData);\n        this.achievementSystem.checkAchievements('queueEvent', eventData);\n    }\n\n\n    updateAchievementDisplay() {\n        const unlockedCount = this.achievementSystem.getUnlockedAchievements().length;\n        const totalCount = Object.keys(this.achievementSystem.achievements).length;\n\n        const countElement = document.getElementById('achievement-count');\n        if (countElement) {\n            countElement.textContent = `(${unlockedCount}/${totalCount})`;\n        }\n\n        // Display all achievements with their status\n        const achievementsList = document.getElementById('achievements-list');\n        if (achievementsList) {\n            achievementsList.innerHTML = ''; // Clear existing\n\n            Object.values(this.achievementSystem.achievements).forEach(achievement => {\n                const achievementElement = document.createElement('div');\n                achievementElement.className = achievement.unlocked ? 'achievement-item unlocked' : 'achievement-item locked';\n                achievementElement.title = achievement.description;\n                achievementElement.textContent = achievement.unlocked ? `✓ ${achievement.name}` : `○ ${achievement.name}`;\n                achievementsList.appendChild(achievementElement);\n            });\n        }\n\n        // Update statistics\n        this.updateStatistics();\n    }\n\n    updateStatistics() {\n        const stats = this.achievementSystem.stats;\n\n        document.getElementById('stat-queues').textContent = stats.queuesCompleted;\n        document.getElementById('stat-events').textContent = stats.queueEvents;\n        document.getElementById('stat-clicks').textContent = stats.adClicks;\n\n        // Format total wait time\n        const totalMinutes = Math.floor(stats.totalWaitTime / 60000);\n        const hours = Math.floor(totalMinutes / 60);\n        const minutes = totalMinutes % 60;\n\n        let timeText = '';\n        if (hours > 0) {\n            timeText = `${hours}h ${minutes}m`;\n        } else {\n            timeText = `${minutes}m`;\n        }\n\n        document.getElementById('stat-time').textContent = timeText;\n    }\n\n    showPremiumResult(result) {\n        const popup = document.createElement('div');\n        popup.style.cssText = `\n            position: fixed;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            background: linear-gradient(135deg, #ffd700, #ffaa00);\n            color: #000;\n            border: 3px solid #ffaa00;\n            padding: 25px;\n            border-radius: 12px;\n            z-index: 1000;\n            text-align: center;\n            max-width: 350px;\n            box-shadow: 0 10px 30px rgba(255, 215, 0, 0.4);\n            font-weight: bold;\n        `;\n\n        popup.innerHTML = `\n            <h3 style=\"margin-bottom: 15px; color: #000;\">💎 Queue Skip Pro™</h3>\n            <p style=\"margin-bottom: 15px;\">${result.message}</p>\n            <p style=\"font-size: 0.8em; font-style: italic; margin-bottom: 20px;\">\n                Processing payment... Optimizing queue position...\n            </p>\n            <button style=\"\n                padding: 10px 20px;\n                background: #000;\n                color: #ffd700;\n                border: none;\n                border-radius: 6px;\n                cursor: pointer;\n                font-family: inherit;\n                font-weight: bold;\n            \">OK</button>\n        `;\n\n        document.body.appendChild(popup);\n\n        const closePopup = () => popup.remove();\n        popup.querySelector('button').addEventListener('click', closePopup);\n        setTimeout(closePopup, 5000);\n    }\n\n    showResetConfirmation() {\n        const popup = document.createElement('div');\n        popup.style.cssText = `\n            position: fixed;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            background: var(--secondary-bg);\n            border: 2px solid #ff4444;\n            padding: 25px;\n            border-radius: 8px;\n            z-index: 1000;\n            text-align: center;\n            max-width: 300px;\n            box-shadow: 0 10px 30px rgba(0,0,0,0.5);\n        `;\n\n        popup.innerHTML = `\n            <h3 style=\"color: #ff4444; margin-bottom: 15px;\">⚠️ Reset Progress</h3>\n            <p style=\"margin-bottom: 20px;\">Are you sure you want to reset all progress? This will:</p>\n            <ul style=\"text-align: left; margin-bottom: 20px; color: var(--text-secondary);\">\n                <li>Reset your queue position</li>\n                <li>Clear all achievements</li>\n                <li>Reset statistics</li>\n                <li>Clear saved progress</li>\n            </ul>\n            <div style=\"display: flex; gap: 10px; justify-content: center;\">\n                <button id=\"confirm-reset\" style=\"\n                    padding: 8px 16px;\n                    background: #ff4444;\n                    color: white;\n                    border: none;\n                    border-radius: 4px;\n                    cursor: pointer;\n                    font-family: inherit;\n                \">Reset</button>\n                <button id=\"cancel-reset\" style=\"\n                    padding: 8px 16px;\n                    background: var(--border-color);\n                    color: var(--text-primary);\n                    border: none;\n                    border-radius: 4px;\n                    cursor: pointer;\n                    font-family: inherit;\n                \">Cancel</button>\n            </div>\n        `;\n\n        document.body.appendChild(popup);\n\n        const closePopup = () => popup.remove();\n\n        popup.querySelector('#confirm-reset').addEventListener('click', () => {\n            this.resetAllProgress();\n            closePopup();\n        });\n\n        popup.querySelector('#cancel-reset').addEventListener('click', closePopup);\n    }\n\n    async resetAllProgress() {\n        // First destroy the current queue simulator\n        this.queueSimulator.destroy();\n\n        // Clear all localStorage data BEFORE creating new instances\n        localStorage.removeItem('queueSimulatorState');\n        localStorage.removeItem('queueSimulatorAchievements');\n\n        // Also clear any other potential queue-related localStorage items\n        Object.keys(localStorage).forEach(key => {\n            if (key.toLowerCase().includes('queue')) {\n                localStorage.removeItem(key);\n            }\n        });\n\n        // Reset achievement system\n        this.achievementSystem.resetProgress();\n\n        // Create fresh queue simulator (which will now load clean state)\n        const { QueueSimulator } = await import('./queue-engine.js');\n        this.queueSimulator = new QueueSimulator();\n\n        // Force queue to start at level 1\n        this.queueSimulator.state.currentQueue = 1;\n        this.queueSimulator.state.position = Math.floor(Math.random() * (gameConfig.queue.initialPositionMax - gameConfig.queue.initialPositionMin)) + gameConfig.queue.initialPositionMin;\n        this.queueSimulator.state.waitTime = this.queueSimulator.calculateFakeWaitTime();\n\n        this.queueSimulator.init();\n\n        console.log('Reset complete - Queue level:', this.queueSimulator.state.currentQueue, 'Position:', this.queueSimulator.state.position);\n\n        // Reset theme\n        this.themeManager.setTheme('basic');\n\n        // Clear achievements display\n        const achievementsList = document.getElementById('achievements-list');\n        if (achievementsList) {\n            achievementsList.innerHTML = '';\n        }\n\n        // Update displays\n        this.updateAchievementDisplay();\n        this.updatePositionDisplay(this.queueSimulator.state.position);\n        this.updateWaitTimeDisplay(this.queueSimulator.state.waitTime);\n\n        // Re-bind events\n        this.bindEvents();\n\n        console.log('All progress reset');\n    }\n\n    showConfigPanel() {\n        const popup = document.createElement('div');\n        popup.style.cssText = `\n            position: fixed;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            background: var(--secondary-bg);\n            border: 2px solid var(--accent-color);\n            padding: 25px;\n            border-radius: 12px;\n            z-index: 1000;\n            max-width: 500px;\n            max-height: 80vh;\n            overflow-y: auto;\n            box-shadow: 0 10px 30px rgba(0,0,0,0.5);\n        `;\n\n        const musicStatus = this.audioManager.isBackgroundMusicPlaying ? 'ON' : 'OFF';\n        const musicStatusColor = this.audioManager.isBackgroundMusicPlaying ? 'var(--accent-color)' : 'var(--text-secondary)';\n        const musicBlocked = localStorage.getItem('musicBlocked') === 'true';\n\n        popup.innerHTML = `\n            <h3 style=\"color: var(--accent-color); margin-bottom: 20px; text-align: center;\">🎵 Music Settings</h3>\n\n            <div style=\"margin-bottom: 25px; text-align: center;\">\n                <div style=\"margin-bottom: 20px;\">\n                    <label style=\"display: block; margin-bottom: 10px; color: var(--text-primary); font-size: 1.1em;\">Background Music:</label>\n                    <div style=\"display: flex; align-items: center; justify-content: center; gap: 15px; margin-bottom: 10px;\">\n                        <button id=\"music-toggle\" style=\"\n                            padding: 10px 20px;\n                            background: ${this.audioManager.isBackgroundMusicPlaying ? 'var(--accent-color)' : 'transparent'};\n                            color: ${this.audioManager.isBackgroundMusicPlaying ? 'var(--primary-bg)' : 'var(--accent-color)'};\n                            border: 2px solid var(--accent-color);\n                            border-radius: 6px;\n                            cursor: pointer;\n                            font-family: inherit;\n                            font-weight: bold;\n                            font-size: 16px;\n                            transition: all 0.2s ease;\n                        \">${this.audioManager.isBackgroundMusicPlaying ? '🎵 ON' : '🔇 OFF'}</button>\n                    </div>\n                    <div style=\"font-size: 12px; color: var(--text-secondary); margin-bottom: 10px;\">\n                        Status: <span style=\"color: ${musicStatusColor}; font-weight: bold;\">${musicStatus}</span>\n                        ${musicBlocked ? '<br><span style=\"color: #ff6b6b;\">⚠️ Click button to enable music</span>' : ''}\n                    </div>\n                </div>\n\n                <div>\n                    <label style=\"display: block; margin-bottom: 10px; color: var(--text-primary); font-size: 1.1em;\">Volume:</label>\n                    <input type=\"range\" id=\"config-music-volume\" value=\"${window.gameConfig.audio.backgroundMusicVolume}\"\n                           min=\"0\" max=\"1\" step=\"0.1\" style=\"width: 100%; margin-bottom: 10px;\">\n                    <span style=\"color: var(--accent-color); font-size: 1.2em; font-weight: bold;\">${Math.round(window.gameConfig.audio.backgroundMusicVolume * 100)}%</span>\n                </div>\n            </div>\n\n            <div style=\"display: flex; gap: 10px; justify-content: center;\">\n                <button id=\"close-config\" style=\"\n                    padding: 10px 25px;\n                    background: var(--accent-color);\n                    color: var(--primary-bg);\n                    border: none;\n                    border-radius: 6px;\n                    cursor: pointer;\n                    font-family: inherit;\n                    font-weight: bold;\n                \">Close</button>\n            </div>\n        `;\n\n        document.body.appendChild(popup);\n\n        // Music toggle functionality\n        const musicToggleButton = popup.querySelector('#music-toggle');\n        musicToggleButton.addEventListener('click', async () => {\n            if (this.audioManager.isBackgroundMusicPlaying) {\n                // Turn music OFF\n                this.audioManager.pauseBackgroundMusic();\n                musicToggleButton.innerHTML = '🔇 OFF';\n                musicToggleButton.style.background = 'transparent';\n                musicToggleButton.style.color = 'var(--accent-color)';\n\n                // Update status text\n                const statusSpan = popup.querySelector('span[style*=\"font-weight: bold\"]');\n                if (statusSpan) {\n                    statusSpan.textContent = 'OFF';\n                    statusSpan.style.color = 'var(--text-secondary)';\n                }\n            } else {\n                // Turn music ON\n                console.log('User manually requested music - attempting to play');\n\n                // Clear any blocked state since this is user-initiated\n                localStorage.removeItem('musicBlocked');\n\n                const success = await this.audioManager.playBackgroundMusic();\n\n                if (success) {\n                    musicToggleButton.innerHTML = '🎵 ON';\n                    musicToggleButton.style.background = 'var(--accent-color)';\n                    musicToggleButton.style.color = 'var(--primary-bg)';\n\n                    // Update status text\n                    const statusSpan = popup.querySelector('span[style*=\"font-weight: bold\"]');\n                    if (statusSpan) {\n                        statusSpan.textContent = 'ON';\n                        statusSpan.style.color = 'var(--accent-color)';\n                    }\n\n                    // Remove any warning message\n                    const warningSpan = popup.querySelector('span[style*=\"#ff6b6b\"]');\n                    if (warningSpan) {\n                        warningSpan.remove();\n                    }\n                } else {\n                    // Show feedback that it failed\n                    musicToggleButton.innerHTML = '❌ Blocked';\n                    setTimeout(() => {\n                        musicToggleButton.innerHTML = '🔇 OFF';\n                    }, 2000);\n                }\n            }\n\n            // Update enhanced audio controls if they exist\n            if (this.audioManager.musicStatusIndicator) {\n                this.audioManager.updateMusicStatus(this.audioManager.musicStatusIndicator);\n            }\n            if (this.audioManager.musicToggleButton) {\n                this.audioManager.musicToggleButton.style.opacity = this.audioManager.isBackgroundMusicPlaying ? '1' : '0.5';\n            }\n\n            // Auto-close popup after music toggle\n            setTimeout(() => {\n                closePopup();\n            }, 1000);\n        });\n\n        // Update volume display in real-time and apply changes immediately\n        const musicVolumeSlider = popup.querySelector('#config-music-volume');\n        let volumeTimeout;\n\n        musicVolumeSlider.addEventListener('input', (e) => {\n            const span = e.target.nextElementSibling;\n            span.textContent = Math.round(e.target.value * 100) + '%';\n\n            // Apply volume change immediately\n            window.updateConfig('audio', 'backgroundMusicVolume', parseFloat(e.target.value));\n            if (this.audioManager.backgroundMusic) {\n                this.audioManager.backgroundMusic.volume = parseFloat(e.target.value);\n            }\n\n            // Clear existing timeout and set new one for auto-close\n            clearTimeout(volumeTimeout);\n            volumeTimeout = setTimeout(() => {\n                closePopup();\n            }, 2000); // Auto-close after 2 seconds of no volume changes\n        });\n\n        const closePopup = () => popup.remove();\n        popup.querySelector('#close-config').addEventListener('click', closePopup);\n    }\n\n    bindCheatCodes() {\n        document.addEventListener('keydown', (e) => {\n            // Add the pressed key to the buffer\n            this.cheatBuffer += e.key.toLowerCase();\n\n            // Keep only the last 10 characters to prevent memory issues\n            if (this.cheatBuffer.length > 10) {\n                this.cheatBuffer = this.cheatBuffer.slice(-10);\n            }\n\n            // Check for cheat codes\n            for (const [code, action] of Object.entries(this.cheatCodes)) {\n                if (this.cheatBuffer.includes(code)) {\n                    this.cheatBuffer = ''; // Clear buffer after activation\n                    action();\n                    break;\n                }\n            }\n        });\n    }\n\n    activateCheat() {\n        // Get current queue info before completing\n        const currentQueueData = this.queueSimulator.getCurrentQueue();\n\n        // Set position to 0 to trigger natural completion\n        this.queueSimulator.state.position = 0;\n\n        // Update the display immediately\n        this.updatePositionDisplay(0);\n\n        // Trigger the natural completion sequence (this will call completeQueue)\n        this.queueSimulator.updateQueuePosition();\n\n        // Show a brief cheat notification\n        this.showCheatMessage();\n\n        console.log(`🎮 CHEAT ACTIVATED: Completed ${currentQueueData.name} instantly`);\n    }\n\n    showCheatMessage() {\n        const popup = document.createElement('div');\n        popup.style.cssText = `\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            background: linear-gradient(135deg, #ff0000, #ff6600);\n            color: white;\n            border: 3px solid #ffaa00;\n            padding: 15px 20px;\n            border-radius: 8px;\n            z-index: 3000;\n            text-align: center;\n            max-width: 250px;\n            box-shadow: 0 10px 30px rgba(255, 0, 0, 0.4);\n            font-weight: bold;\n            animation: pulse 0.5s ease-in-out;\n        `;\n\n        popup.innerHTML = `\n            <div style=\"font-size: 1em;\">🎮 IDDQD ACTIVATED!</div>\n            <div style=\"font-size: 0.8em; margin-top: 5px;\">Skipping queue...</div>\n        `;\n\n        document.body.appendChild(popup);\n\n        setTimeout(() => {\n            popup.remove();\n        }, 2000);\n    }\n\n    showQueueCompletionScreen(completedQueue) {\n        // Create fullscreen completion overlay\n        const overlay = document.createElement('div');\n        overlay.style.cssText = `\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100vw;\n            height: 100vh;\n            background: linear-gradient(135deg, #1a1a1a, #2a2a2a);\n            z-index: 2000;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            justify-content: center;\n            text-align: center;\n            color: var(--text-primary);\n            animation: fadeIn 0.5s ease-in;\n        `;\n\n        overlay.innerHTML = `\n            <div style=\"max-width: 600px; padding: 40px;\">\n                <h1 style=\"color: var(--accent-color); font-size: 3em; margin-bottom: 20px; text-shadow: 0 0 20px var(--accent-color);\">\n                    🎉 Congratulations!\n                </h1>\n\n                <h2 style=\"font-size: 1.8em; margin-bottom: 30px; color: var(--text-primary);\">\n                    Thank you for waiting in ${completedQueue.name}!\n                </h2>\n\n                <div style=\"background: var(--secondary-bg); padding: 30px; border-radius: 12px; border: 2px solid var(--accent-color); margin: 30px 0;\">\n                    <p style=\"font-size: 1.3em; margin-bottom: 20px; color: var(--accent-color);\">\n                        🎮 Your patience has been rewarded!\n                    </p>\n                    <p style=\"font-size: 1.1em; margin-bottom: 15px;\">\n                        The game is now loading...\n                    </p>\n                    <div style=\"margin: 20px 0;\">\n                        <div id=\"loading-bar\" style=\"width: 100%; height: 8px; background: var(--border-color); border-radius: 4px; overflow: hidden;\">\n                            <div id=\"loading-fill\" style=\"height: 100%; background: var(--accent-color); width: 0%; transition: width 8s ease;\"></div>\n                        </div>\n                    </div>\n                    <p style=\"font-size: 0.9em; color: var(--text-secondary);\">\n                        Please wait while we prepare your experience...\n                    </p>\n                </div>\n            </div>\n        `;\n\n        document.body.appendChild(overlay);\n\n        // Animate loading bar\n        setTimeout(() => {\n            const loadingFill = overlay.querySelector('#loading-fill');\n            loadingFill.style.width = '100%';\n        }, 100);\n\n        // After 9 seconds, advance to next queue and remove overlay\n        setTimeout(() => {\n            this.advanceToNextQueueManual(completedQueue);\n            overlay.remove();\n        }, 9000);\n    }\n\n\n    advanceToNextQueueManual(completedQueue) {\n        // Determine next queue (same logic as queue-engine.js)\n        const currentQueueId = this.queueSimulator.state.currentQueue;\n        let nextQueueId;\n\n        if (currentQueueId < 6) {\n            nextQueueId = currentQueueId + 1;\n        } else if (currentQueueId === 6) {\n            nextQueueId = 999; // Jump to infinite queue\n        } else {\n            nextQueueId = 1; // Reset to beginning\n        }\n\n        // Update queue simulator state\n        this.queueSimulator.state.currentQueue = nextQueueId;\n        this.queueSimulator.state.position = Math.floor(Math.random() * (gameConfig.queue.initialPositionMax - gameConfig.queue.initialPositionMin)) + gameConfig.queue.initialPositionMin;\n        this.queueSimulator.state.waitTime = this.queueSimulator.calculateFakeWaitTime();\n        this.queueSimulator.state.queueTheme = this.queueSimulator.getCurrentQueue().theme;\n        this.queueSimulator.state.isActive = true;\n        this.queueSimulator.state.isCompleting = false; // Reset completion flag\n\n        // Update displays\n        this.updatePositionDisplay(this.queueSimulator.state.position);\n        this.updateWaitTimeDisplay(this.queueSimulator.state.waitTime);\n\n        // Update theme\n        const newQueueData = this.queueSimulator.getCurrentQueue();\n        this.themeManager.setTheme(newQueueData.theme);\n\n        // Check achievements\n        this.achievementSystem.checkAchievements('queueLevel', nextQueueId);\n\n        // Save state\n        this.queueSimulator.saveState();\n\n        console.log(`Advanced to ${newQueueData.name}`);\n    }\n\n    openContactEmail() {\n        const email = 'sagarikagames@protonmail.com';\n        const subject = 'Queue Game - Contact';\n        const body = 'Hello Sagarika Games,\\n\\nI wanted to reach out about Queue Game.\\n\\n';\n\n        const mailtoLink = `mailto:${email}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;\n\n        try {\n            window.open(mailtoLink, '_blank');\n        } catch (error) {\n            // Fallback - copy email to clipboard\n            navigator.clipboard.writeText(email).then(() => {\n                this.showContactInfo(email);\n            }).catch(() => {\n                this.showContactInfo(email);\n            });\n        }\n    }\n\n    showContactInfo(email) {\n        const popup = document.createElement('div');\n        popup.style.cssText = `\n            position: fixed;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            background: var(--secondary-bg);\n            border: 3px solid var(--accent-color);\n            padding: 30px;\n            border-radius: 15px;\n            z-index: 1000;\n            max-width: 450px;\n            box-shadow: 0 15px 40px rgba(0,0,0,0.7);\n            text-align: center;\n        `;\n\n        popup.innerHTML = `\n            <div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; gap: 10px; margin-bottom: 20px;\">\n                <img src=\"./assets/images/sagarika_games_text.png\" alt=\"Sagarika Games\" style=\"height: 30px; width: auto; filter: drop-shadow(0 0 5px rgba(0, 204, 255, 0.4));\">\n                <h2 style=\"color: var(--accent-color); margin: 0; font-size: 1.2em;\">Contact Us</h2>\n            </div>\n            <p style=\"color: var(--text-primary); margin-bottom: 20px; line-height: 1.6;\">\n                📧 Email: <strong style=\"color: var(--accent-color);\">${email}</strong><br>\n                <small style=\"color: var(--text-secondary);\">Email address copied to clipboard!</small>\n            </p>\n            <button id=\"contact-popup-ok\" style=\"\n                padding: 12px 25px;\n                background: var(--accent-color);\n                color: var(--primary-bg);\n                border: none;\n                border-radius: 8px;\n                cursor: pointer;\n                font-family: inherit;\n                font-weight: bold;\n                font-size: 1.1em;\n                box-shadow: 0 4px 12px rgba(0, 204, 255, 0.4);\n                transition: all 0.3s ease;\n            \" onmouseover=\"this.style.transform='translateY(-2px)'\" onmouseout=\"this.style.transform='translateY(0)'\">Got it!</button>\n        `;\n\n        document.body.appendChild(popup);\n\n        // Close popup when clicking the button or anywhere on popup\n        popup.addEventListener('click', () => {\n            popup.remove();\n        });\n    }\n\n    toggleAudioControls() {\n        if (this.audioControls) {\n            // Toggle visibility of existing controls\n            const isVisible = this.audioControls.style.display !== 'none';\n            this.audioControls.style.display = isVisible ? 'none' : 'flex';\n        } else {\n            // Create controls if they don't exist\n            this.audioControls = this.audioManager.createAudioControls();\n        }\n    }\n\n    setupFocusHandling() {\n        // Handle window focus/blur for automatic pausing\n        window.addEventListener('blur', () => {\n            if (!this.isPaused && this.queueSimulator?.state?.isActive) {\n                console.log('Window lost focus - pausing game');\n                this.pauseGame();\n            }\n        });\n\n        window.addEventListener('focus', () => {\n            if (this.isPaused) {\n                console.log('Window gained focus - resuming game');\n                this.resumeGame();\n            }\n        });\n\n        // Also handle document visibility change (more reliable for some browsers)\n        document.addEventListener('visibilitychange', () => {\n            if (document.hidden) {\n                if (!this.isPaused && this.queueSimulator?.state?.isActive) {\n                    console.log('Tab hidden - pausing game');\n                    this.pauseGame();\n                }\n            } else {\n                if (this.isPaused) {\n                    console.log('Tab visible - resuming game');\n                    this.resumeGame();\n                }\n            }\n        });\n    }\n\n    pauseGame() {\n        this.isPaused = true;\n\n        // Pause background music\n        this.wasPlayingMusic = this.audioManager.isBackgroundMusicPlaying;\n        if (this.wasPlayingMusic) {\n            this.audioManager.pauseBackgroundMusic();\n        }\n\n        // Pause queue simulator\n        if (this.queueSimulator) {\n            this.queueSimulator.pause();\n        }\n\n        // Pause news system\n        if (this.newsSystem) {\n            this.newsSystem.pause();\n        }\n\n        // Pause ad system\n        if (this.adSystem) {\n            this.adSystem.pause();\n        }\n\n        // Show pause indicator\n        this.showPauseIndicator();\n\n        console.log('Game paused');\n    }\n\n    resumeGame() {\n        this.isPaused = false;\n\n        // Resume background music if it was playing\n        if (this.wasPlayingMusic) {\n            this.audioManager.playBackgroundMusic();\n        }\n\n        // Resume queue simulator\n        if (this.queueSimulator) {\n            this.queueSimulator.resume();\n        }\n\n        // Resume news system\n        if (this.newsSystem) {\n            this.newsSystem.resume();\n        }\n\n        // Resume ad system\n        if (this.adSystem) {\n            this.adSystem.resume();\n        }\n\n        // Hide pause indicator\n        this.hidePauseIndicator();\n\n        console.log('Game resumed');\n    }\n\n    showPauseIndicator() {\n        // Remove existing indicator if present\n        this.hidePauseIndicator();\n\n        const indicator = document.createElement('div');\n        indicator.id = 'pause-indicator';\n        indicator.style.cssText = `\n            position: fixed;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            background: rgba(0, 0, 0, 0.8);\n            color: var(--accent-color);\n            padding: 20px 40px;\n            border-radius: 12px;\n            border: 2px solid var(--accent-color);\n            font-size: 24px;\n            font-weight: bold;\n            z-index: 10000;\n            text-align: center;\n            box-shadow: 0 0 20px rgba(0, 204, 255, 0.5);\n        `;\n        indicator.innerHTML = `\n            ⏸️ Game Paused<br>\n            <small style=\"font-size: 14px; opacity: 0.8;\">Switch back to continue waiting</small>\n        `;\n\n        document.body.appendChild(indicator);\n    }\n\n    hidePauseIndicator() {\n        const indicator = document.getElementById('pause-indicator');\n        if (indicator) {\n            indicator.remove();\n        }\n    }\n}\n\n// Initialize the game when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n    const game = new Game();\n    window.gameInstance = game; // Make available globally for debugging\n    game.init();\n});\n\n// Export for debugging\nwindow.QueueGame = Game;\n\n// Add debugging functions\nwindow.debugAudio = () => {\n    const game = window.gameInstance;\n    if (game && game.audioManager) {\n        console.log('=== Audio Debug Info ===');\n        console.log('Audio Manager:', game.audioManager);\n        console.log('Background Music:', game.audioManager.backgroundMusic);\n        console.log('Is Playing:', game.audioManager.isBackgroundMusicPlaying);\n        console.log('Is Muted:', game.audioManager.isMuted);\n        console.log('Volume:', game.audioManager.volume);\n\n        if (game.audioManager.backgroundMusic) {\n            console.log('Audio Element State:', {\n                src: game.audioManager.backgroundMusic.src,\n                volume: game.audioManager.backgroundMusic.volume,\n                paused: game.audioManager.backgroundMusic.paused,\n                readyState: game.audioManager.backgroundMusic.readyState,\n                networkState: game.audioManager.backgroundMusic.networkState,\n                error: game.audioManager.backgroundMusic.error\n            });\n        }\n    }\n};\n\nwindow.forcePlayMusic = async () => {\n    const game = window.gameInstance;\n    if (game && game.audioManager) {\n        console.log('=== Force Playing Music ===');\n        localStorage.removeItem('musicBlocked');\n        const result = await game.audioManager.playBackgroundMusic();\n        console.log('Play result:', result);\n        return result;\n    }\n};"],"file":"assets/index-BlS-BiNo.js"}